{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/projects/index.md","path":"projects/index.md","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cute_icon/塔可.png","path":"images/cute_icon/塔可.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cute_icon/布丁.png","path":"images/cute_icon/布丁.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cute_icon/寿司.png","path":"images/cute_icon/寿司.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cute_icon/开心果.png","path":"images/cute_icon/开心果.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cute_icon/棒冰.png","path":"images/cute_icon/棒冰.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cute_icon/披萨.png","path":"images/cute_icon/披萨.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cute_icon/热狗.png","path":"images/cute_icon/热狗.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cute_icon/爆米花.png","path":"images/cute_icon/爆米花.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cute_icon/牛油果.png","path":"images/cute_icon/牛油果.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cute_icon/甜甜圈.png","path":"images/cute_icon/甜甜圈.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cute_icon/腰果.png","path":"images/cute_icon/腰果.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cute_icon/薯片.png","path":"images/cute_icon/薯片.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cute_icon/碧根果.png","path":"images/cute_icon/碧根果.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cute_icon/蛋糕.png","path":"images/cute_icon/蛋糕.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cute_icon/草莓.png","path":"images/cute_icon/草莓.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cute_icon/面包.png","path":"images/cute_icon/面包.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cute_icon/蛋黄酥.png","path":"images/cute_icon/蛋黄酥.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cute_icon/饼干.png","path":"images/cute_icon/饼干.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cute_icon/马卡龙.png","path":"images/cute_icon/马卡龙.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cute_icon/麻薯.png","path":"images/cute_icon/麻薯.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/crash_cheat.js","path":"js/src/crash_cheat.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/runtime.js","path":"js/src/runtime.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1583560869756},{"_id":"themes/next/.gitattributes","hash":"ad7f5fee696d1fa383d7b5d68917681092f0608e","modified":1583560869756},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1583560869756},{"_id":"themes/next/.gitignore","hash":"1103bb9f66e4647ffc1a99c9255575674cafe26c","modified":1583560869757},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1583560869757},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1583560869757},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1583560869757},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1583560869758},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1583560869757},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1583560869757},{"_id":"themes/next/README.cn.md","hash":"2c766b3369ed477bce134a5450dab45bef161504","modified":1583560869758},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1583560869758},{"_id":"themes/next/README.md","hash":"8ce60ce578963eb4e1eb5e33e1efc2fc4779af9c","modified":1583560869758},{"_id":"themes/next/_config.yml","hash":"e64557e70d43906978b0b088d0941292591a07ae","modified":1583560869758},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1583560869773},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1583560869758},{"_id":"source/CNAME","hash":"78641a2bd6e5ea339298f304b9d482061c3e5c30","modified":1583560869664},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1583560869756},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"50d48c47162817a3810a9d9ad51104e83947419a","modified":1583560869756},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1583560869756},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1583560869757},{"_id":"themes/next/layout/_layout.swig","hash":"794a637567d6d17a1ecf0f2a94db98c95defbb08","modified":1583560869761},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1583560869773},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1583560869773},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1583560869773},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1583560869773},{"_id":"themes/next/layout/page.swig","hash":"6266a6a9d0c293616c89143b3dd0db4c5a002db3","modified":1583560869773},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1583560869773},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1583560869773},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1583560869759},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1583560869759},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1583560869759},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1583560869759},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1583560869759},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1583560869759},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1583560869759},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1583560869760},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1583560869760},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1583560869760},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1583560869760},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1583560869760},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1583560869760},{"_id":"themes/next/languages/zh-Hans.yml","hash":"e619a3adcfdd25cabd4109f31aeb571828911838","modified":1583560869760},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1583560869774},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1583560869761},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1583560869761},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1583560869774},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1583560869827},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1583560869827},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1583560869828},{"_id":"source/_posts/ES6-数组扩展.md","hash":"072b7510422a4b95073369f3007f0a6cda665b33","modified":1587014399729},{"_id":"source/_data/gallery.yml","hash":"02b0f798d23fa5c36e7794de91dd7deaf2577e0a","modified":1583560869664},{"_id":"source/_posts/ES6-对象扩展.md","hash":"2826f670bdc13e21a3f1e88a7892ec6dd6bac5f2","modified":1586496341259},{"_id":"source/_posts/Taro.md","hash":"03155717c9802fe9ec4de6062fa5f5863002b6de","modified":1583560869665},{"_id":"source/_posts/lottie.md","hash":"8e2dda33759aa3f1898c1e18d8b3ac92d37d9656","modified":1583560869665},{"_id":"source/_posts/not_if.md","hash":"a6ea6add7a8926ed14a36b67341a19ca743e0e4a","modified":1583560869665},{"_id":"source/_posts/vue_data_binding.md","hash":"4f6915e7afe7d6bf0a479ddc9c92d48f75a1d127","modified":1583560869665},{"_id":"source/about/index.md","hash":"8a6d93141bd73b1998e145f0c436d037d025b5e6","modified":1583560869665},{"_id":"source/categories/index.md","hash":"64d29cbd5afdf3d0c449cb91103519c3136ce214","modified":1583560869666},{"_id":"source/gallery/index.md","hash":"4237346a8fa9bc00650643cec8a033aaf8e66bc4","modified":1583560869666},{"_id":"source/friends/index.md","hash":"b99238e53063f42d65f4fcd81004797551dc45a7","modified":1583560869666},{"_id":"source/tags/index.md","hash":"ae39fcb0177fd0291179adca69a7c68e694c9938","modified":1583560869666},{"_id":"source/projects/index.md","hash":"99db9328f706c42eb70bedf964faa4818b1fa997","modified":1583560869666},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1583560869789},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1583560869761},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1583560869761},{"_id":"themes/next/layout/_macro/passage-end-tag.swig","hash":"c87be585aae8c8c8429b1d4d8337d806d64baf7a","modified":1583560869762},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1583560869762},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"477a9d795db8118b7acdf52a8c8a3bd1a6b0d9fb","modified":1583560869762},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1583560869762},{"_id":"themes/next/layout/_macro/post.swig","hash":"71763396360696ee0c17d42dddc681de8fb30c56","modified":1583560869762},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"9013bc1ef7d1eac5e61030168335fe0288275253","modified":1583560869763},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1583560869763},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1583560869763},{"_id":"themes/next/layout/_partials/footer.swig","hash":"b254928ec49e657adb85d40c916dfc060ae9d7b3","modified":1583560869763},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1583560869764},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1583560869764},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1583560869764},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1583560869764},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1583560869764},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1583560869766},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1583560869766},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1583560869767},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1583560869771},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1583560869771},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1583560869771},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1583560869771},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1583560869771},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1583560869771},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1583560869772},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1583560869774},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1583560869774},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1583560869774},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1583560869774},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1583560869775},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1583560869775},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1583560869775},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1583560869775},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1583560869775},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1583560869789},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1583560869789},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1583560869789},{"_id":"themes/next/source/images/avatar.png","hash":"24489fd316360b681f2e59349d382fd974964f5e","modified":1583560869790},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1583560869789},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1583560869790},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1583560869790},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1583560869790},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1583560869790},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1583560869791},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1583560869791},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1583560869791},{"_id":"themes/next/source/images/favicon.ico","hash":"f10ccbc914c2dd048f4b12bc797e91c7bfaf3cc6","modified":1583560869793},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1583560869793},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1583560869794},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1583560869794},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1583560869794},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1583560869794},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1583560869794},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1583560869767},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1583560869767},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1583560869785},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1583560869785},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1583560869785},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1583560869788},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1583560869789},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1583560869764},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1583560869764},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1583560869765},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1583560869765},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1583560869765},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1583560869765},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1583560869765},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1583560869765},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1583560869766},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1583560869766},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1583560869766},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1583560869767},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1583560869767},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1583560869767},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1583560869768},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"466a3e32ec0ffeb78b61fed15fd6b5c8bd5b5061","modified":1583560869768},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1583560869768},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1583560869768},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1583560869768},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1583560869769},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1583560869768},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1583560869769},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1583560869769},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1583560869769},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1583560869769},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1583560869769},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1583560869770},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1583560869770},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1583560869770},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1583560869770},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1583560869770},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1583560869770},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1583560869770},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1583560869771},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1583560869772},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1583560869772},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1583560869772},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1583560869772},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1583560869785},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"7f1d8d579503cd41076996caeac516d56f03b4cd","modified":1583560869784},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1583560869785},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1583560869785},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1583560869788},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1583560869789},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1583560869788},{"_id":"themes/next/source/css/_variables/base.styl","hash":"cae2ac4ae754fed774206a6cd939b14d43ce3469","modified":1583560869789},{"_id":"themes/next/source/images/cute_icon/塔可.png","hash":"4353c941ff4e07015f1fa14eca3236013f97a5a2","modified":1583560869791},{"_id":"themes/next/source/images/cute_icon/布丁.png","hash":"8cf430dcafc82be86e71d121ed5ecd2cbd815de0","modified":1583560869791},{"_id":"themes/next/source/images/cute_icon/寿司.png","hash":"24489fd316360b681f2e59349d382fd974964f5e","modified":1583560869791},{"_id":"themes/next/source/images/cute_icon/开心果.png","hash":"ecb2a8e78c29b2c3d1314f3dcfe0c3f1b98bda5d","modified":1583560869791},{"_id":"themes/next/source/images/cute_icon/棒冰.png","hash":"3f3f454da1a5f1d85212bb37532d0425b3737176","modified":1583560869792},{"_id":"themes/next/source/images/cute_icon/披萨.png","hash":"7d7abf5ab2420a72888193204f11b41d87849480","modified":1583560869791},{"_id":"themes/next/source/images/cute_icon/热狗.png","hash":"18868916394b6e716f2e0c7f4d5edd61b963cfc0","modified":1583560869792},{"_id":"themes/next/source/images/cute_icon/爆米花.png","hash":"828f7200cc5e0e6b6b44994d2cc251f2f8710329","modified":1583560869792},{"_id":"themes/next/source/images/cute_icon/牛油果.png","hash":"a677213f5ac1a5cd33972cdaf9562b590e19b783","modified":1583560869792},{"_id":"themes/next/source/images/cute_icon/甜甜圈.png","hash":"337ee69c75c0e6e00af4488d6de7bf5bc0bf8663","modified":1583560869792},{"_id":"themes/next/source/images/cute_icon/腰果.png","hash":"aa1091dfa909ee29e4cf5490caee9d950bd87826","modified":1583560869792},{"_id":"themes/next/source/images/cute_icon/薯片.png","hash":"4b3cab10a78d8f1baeafcb93768239e5f7ceb317","modified":1583560869792},{"_id":"themes/next/source/images/cute_icon/碧根果.png","hash":"8092b8fae7565261a7d06a5efcda672b3b59d7e5","modified":1583560869792},{"_id":"themes/next/source/images/cute_icon/蛋糕.png","hash":"4e624f387e917b8c22e34e354a49ec2f4f8c3e75","modified":1583560869793},{"_id":"themes/next/source/images/cute_icon/草莓.png","hash":"c99480967a7ea5095c0ba95b525193d6fd3dc078","modified":1583560869792},{"_id":"themes/next/source/images/cute_icon/面包.png","hash":"a863c8ceda07bbea91dbfa7ee6e78b1b2f4e7e11","modified":1583560869793},{"_id":"themes/next/source/images/cute_icon/蛋黄酥.png","hash":"dc3480e2d043b8471d9eb4ce67013af7ff686fef","modified":1583560869793},{"_id":"themes/next/source/images/cute_icon/饼干.png","hash":"395aa1e7d0cae7477deb88b36c2bad80bc3b768e","modified":1583560869793},{"_id":"themes/next/source/images/cute_icon/马卡龙.png","hash":"6d74a61c6e47e20f97c617023db2051248ed248d","modified":1583560869793},{"_id":"themes/next/source/images/cute_icon/麻薯.png","hash":"c2d950b43671b2e38f7a738abc4b97e61a89f5de","modified":1583560869793},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1583560869794},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1583560869795},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1583560869795},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1583560869795},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1583560869795},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1583560869795},{"_id":"themes/next/source/js/src/crash_cheat.js","hash":"3e9a43f86436fafb5ee5b60ecd0d193c0942e0ce","modified":1583560869795},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1583560869796},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1583560869796},{"_id":"themes/next/source/js/src/runtime.js","hash":"32bafd081784797dabbebf632924d9d670c722c6","modified":1583560869796},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1583560869797},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1583560869797},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1583560869797},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1583560869802},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1583560869802},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1583560869800},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1583560869802},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1583560869802},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1583560869805},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1583560869805},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1583560869805},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1583560869806},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1583560869805},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1583560869806},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1583560869807},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1583560869806},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1583560869807},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1583560869815},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1583560869816},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1583560869816},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1583560869817},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1583560869817},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1583560869817},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1583560869817},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1583560869818},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1583560869818},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1583560869818},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1583560869818},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1583560869817},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1583560869818},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1583560869818},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1583560869818},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1583560869819},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1583560869819},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1583560869819},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1583560869819},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1583560869819},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1583560869819},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1583560869820},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1583560869820},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1583560869820},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1583560869820},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1583560869821},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1583560869820},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1583560869824},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1583560869824},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1583560869827},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1583560869827},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1583560869827},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1583560869816},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1583560869772},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1583560869772},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1583560869775},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1583560869776},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1583560869776},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1583560869775},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1583560869776},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1583560869778},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1583560869781},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1583560869783},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"3bc9859989f770c591c8ddef2b0b615c59b35bae","modified":1583560869784},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1583560869784},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1583560869784},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1583560869784},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1583560869784},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1583560869784},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1583560869785},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1583560869786},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1583560869786},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1583560869785},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1583560869786},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1583560869786},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1583560869786},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1583560869786},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1583560869787},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1583560869787},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4aac01962520d60b03b23022ab601ad4bd19c08c","modified":1583560869787},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1583560869787},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1583560869787},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1583560869787},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1583560869787},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1583560869788},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1583560869788},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1583560869788},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1583560869788},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1583560869796},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1583560869798},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1583560869799},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1583560869799},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1583560869802},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1583560869802},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1583560869803},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1583560869803},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1583560869803},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1583560869803},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1583560869804},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1583560869804},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1583560869805},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1583560869806},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1583560869806},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1583560869807},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1583560869807},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1583560869808},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1583560869824},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1583560869824},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1583560869799},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1583560869815},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1583560869813},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1583560869826},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1583560869776},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1583560869776},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1583560869776},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"85ae517a1ac5c7c3d38eb5d5ddc8605869f9d0d3","modified":1583560869776},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1583560869777},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1583560869776},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1583560869777},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1583560869777},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1583560869777},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1583560869777},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1583560869777},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1583560869777},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1583560869777},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1583560869778},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1583560869778},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1583560869778},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1583560869778},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1583560869778},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1583560869778},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1583560869779},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1583560869779},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"c9e4213b82223d243f5ab7ee531576c54fe47ec9","modified":1583560869779},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1583560869779},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1583560869779},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1583560869779},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1583560869779},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1583560869779},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1583560869780},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1583560869780},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1583560869780},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"b1701b66776e79ba22345ac4df280ae68ba71afd","modified":1583560869780},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1583560869780},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1583560869780},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1583560869780},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1583560869780},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1583560869781},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1583560869781},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1583560869781},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1583560869781},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1583560869781},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1583560869781},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1583560869781},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1583560869781},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1583560869782},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1583560869782},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1583560869782},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1583560869782},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1583560869782},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1583560869782},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1583560869782},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1583560869783},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1583560869783},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1583560869782},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1583560869783},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1583560869783},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1583560869783},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1583560869783},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1583560869783},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1583560869786},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1583560869786},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1583560869787},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1583560869797},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1583560869797},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1583560869798},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1583560869798},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1583560869798},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1583560869803},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1583560869804},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1583560869803},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1583560869804},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1583560869804},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1583560869804},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1583560869809},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1583560869813},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1583560869810},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1583560869801},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1583560869812},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1583560869823}],"Category":[{"name":"ES6","_id":"ck92alkmt0004aubvrbxx5p7j"},{"name":"JavaScript","_id":"ck92alkn4000faubvtq4d0n1u"},{"name":"多端统一","_id":"ck92alkn5000laubvwp6n8edr"},{"name":"Vue","_id":"ck92alkn7000taubv02cz35cw"}],"Data":[{"_id":"gallery","data":{"source":[{"link":"https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-4-18/61933480.jpg","desc":"涂鸦"},{"link":"https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-4-18/86403488.jpg","desc":"云南石林"}]}}],"Page":[{"title":"关于","date":"2017-12-01T11:50:57.000Z","comments":1,"notag":true,"_content":"\n### wpl","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2017-12-01 11:50:57\n\ncomments: true\nnotag: true\n---\n\n### wpl","updated":"2020-03-07T06:01:09.665Z","path":"about/index.html","layout":"page","_id":"ck92alkmr0001aubvyd084hs2","content":"<h3 id=\"wpl\"><a href=\"#wpl\" class=\"headerlink\" title=\"wpl\"></a>wpl</h3>","site":{"data":{"gallery":{"source":[{"link":"https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-4-18/61933480.jpg","desc":"涂鸦"},{"link":"https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-4-18/86403488.jpg","desc":"云南石林"}]}}},"excerpt":"","more":"<h3 id=\"wpl\"><a href=\"#wpl\" class=\"headerlink\" title=\"wpl\"></a>wpl</h3>"},{"title":"分类","date":"2019-01-19T17:40:58.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2019-01-19 17:40:58\ntype: categories\ncomments: false\n---\n","updated":"2020-03-07T06:01:09.666Z","path":"categories/index.html","layout":"page","_id":"ck92alkms0003aubvbd0hpzkf","content":"","site":{"data":{"gallery":{"source":[{"link":"https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-4-18/61933480.jpg","desc":"涂鸦"},{"link":"https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-4-18/86403488.jpg","desc":"云南石林"}]}}},"excerpt":"","more":""},{"date":"2020-03-07T06:01:09.666Z","layout":"true","type":"gallery","_content":"","source":"gallery/index.md","raw":"---\ndate: \nlayout: true\ntype: gallery\n---\n","updated":"2020-03-07T06:01:09.666Z","path":"gallery/index.html","title":"","comments":1,"_id":"ck92alkmw0007aubvowaf1u0t","content":"","site":{"data":{"gallery":{"source":[{"link":"https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-4-18/61933480.jpg","desc":"涂鸦"},{"link":"https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-4-18/86403488.jpg","desc":"云南石林"}]}}},"excerpt":"","more":""},{"date":"2019-01-31T11:15:14.000Z","layout":"true","type":"friends","_content":"\n\n>阔以在**评论区**甩出你的链接哦~","source":"friends/index.md","raw":"---\ndate: 2019-01-31 11:15:14\nlayout : true\ntype: friends\n---\n\n\n>阔以在**评论区**甩出你的链接哦~","updated":"2020-03-07T06:01:09.666Z","path":"friends/index.html","title":"","comments":1,"_id":"ck92alkmy0009aubvg9fitf4t","content":"<blockquote>\n<p>阔以在<strong>评论区</strong>甩出你的链接哦~</p>\n</blockquote>\n","site":{"data":{"gallery":{"source":[{"link":"https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-4-18/61933480.jpg","desc":"涂鸦"},{"link":"https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-4-18/86403488.jpg","desc":"云南石林"}]}}},"excerpt":"","more":"<blockquote>\n<p>阔以在<strong>评论区</strong>甩出你的链接哦~</p>\n</blockquote>\n"},{"title":"标签","date":"2019-01-19T17:38:58.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2019-01-19 17:38:58\ntype: \"tags\"\ncomments: false\n---\n","updated":"2020-03-07T06:01:09.666Z","path":"tags/index.html","layout":"page","_id":"ck92alkn0000daubvpta7dd0r","content":"","site":{"data":{"gallery":{"source":[{"link":"https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-4-18/61933480.jpg","desc":"涂鸦"},{"link":"https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-4-18/86403488.jpg","desc":"云南石林"}]}}},"excerpt":"","more":""}],"Post":[{"title":"ES6+ 数组扩展","date":"2019-10-10T13:14:25.000Z","_content":"\nES6以后的数组扩展，你都会了吗？\n还在用递归实现数组扁平化吗？试试**Array.prototype.flat**\n\n<!-- more -->\n\n### 扩展运算符\n","source":"_posts/ES6-数组扩展.md","raw":"---\ntitle: ES6+ 数组扩展\ndate: 2019-10-10 13:14:25\ntags:\n    - JavaScript\n    - ES6\ncategories: ES6\n---\n\nES6以后的数组扩展，你都会了吗？\n还在用递归实现数组扁平化吗？试试**Array.prototype.flat**\n\n<!-- more -->\n\n### 扩展运算符\n","slug":"ES6-数组扩展","published":1,"updated":"2020-04-16T05:19:59.729Z","_id":"ck92alkmo0000aubv8bm3d52u","comments":1,"layout":"post","photos":[],"link":"","content":"<p>ES6以后的数组扩展，你都会了吗？<br>还在用递归实现数组扁平化吗？试试<strong>Array.prototype.flat</strong></p>\n<a id=\"more\"></a>\n<h3 id=\"扩展运算符\"><a href=\"#扩展运算符\" class=\"headerlink\" title=\"扩展运算符\"></a>扩展运算符</h3>","site":{"data":{"gallery":{"source":[{"link":"https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-4-18/61933480.jpg","desc":"涂鸦"},{"link":"https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-4-18/86403488.jpg","desc":"云南石林"}]}}},"excerpt":"<p>ES6以后的数组扩展，你都会了吗？<br>还在用递归实现数组扁平化吗？试试<strong>Array.prototype.flat</strong></p>","more":"<h3 id=\"扩展运算符\"><a href=\"#扩展运算符\" class=\"headerlink\" title=\"扩展运算符\"></a>扩展运算符</h3>"},{"title":"ES6+ 对象扩展","date":"2019-11-10T13:19:59.000Z","_content":"\nES6以后的对象扩展，你都会了吗？\n\n<!-- more -->","source":"_posts/ES6-对象扩展.md","raw":"---\ntitle: ES6+ 对象扩展\ndate: 2019-11-10 13:19:59\ntags:\n    - JavaScript\n    - ES6\ncategories: ES6\n---\n\nES6以后的对象扩展，你都会了吗？\n\n<!-- more -->","slug":"ES6-对象扩展","published":1,"updated":"2020-04-10T05:25:41.259Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck92alkmr0002aubvot4trso4","content":"<p>ES6以后的对象扩展，你都会了吗？</p>\n<a id=\"more\"></a>","site":{"data":{"gallery":{"source":[{"link":"https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-4-18/61933480.jpg","desc":"涂鸦"},{"link":"https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-4-18/86403488.jpg","desc":"云南石林"}]}}},"excerpt":"<p>ES6以后的对象扩展，你都会了吗？</p>","more":""},{"title":"使用lottie-web制作高性能动画","date":"2019-07-31T12:35:32.000Z","_content":"\n想提前看下效果的小伙伴请看[这里~](https://yechuanjie.com/lottie_demo)\n\n### Lottie 简介\n\n[Lottie 官网](http://airbnb.io/lottie/)\n\n> Lottie 是一个库，用于解析使用 [AE](https://www.adobe.com/cn/products/aftereffects.html) 制作的动画（动画需要通过 AE 中的 bodymovin 插件将其导出为 json 数据格式），支持`web`、`ios`、`android`和`react native`。 这里主要介绍 Lottie 的 web 版本 **lottie-web** 库，它可以解析导出的动画 json 文件，并将其以 svg 或者 canvas 的方式将动画绘制到页面中。\n\n<!-- more -->\n\n### 为什么使用 Lottie\n\n目前多帧动画一般的实现方式是：\n\n- 前端实现`svg、canvas`动画（实现成本较高、维护成本高）\n- 设计师切`gif`（文件较大、容易有锯齿）\n- `png`序列帧（文件较大、容易有锯齿）\n\n> 目前的动画实现方案有着各自的问题，所以我们需要寻找一种更加简单、高效、性能高的动画方案。airbnb 的 Lottie 是一套良好的动画解决方案。\n\n### Lottie 的优势\n\nLottie 方法方案是由设计师出动画，导出为 json，给前端解析。所以，使用 Lottie 方案的好处在于：\n\n- 动画由设计使用专业的动画制作工具`Adobe After Effects`来实现，使动画实现更加方便，动画效果也更好；\n- 前端可以方便的调用动画，并对动画进行控制，减少前端动画工作量；\n- 设计制作动画，前端展现动画，专业人做专业事，分工合理；\n- 还原程度百分之百；\n- 使用 lottie 方案，json 文件大小会比 gif 文件小很多，性能也会更好。\n\n### Lottie 的不足\n\n- lottie-web 文件比较大，lottie.js 大小为 532k，轻量版压缩后也有 150k，经过 gzip 后，大小为 43k。\n- 如果设计师建了很多的图层，可能仍然有 json 文件较大的问题，需要设计师遵循一定的设计规范。\n\n### lottie-web 使用方式\n\n#### 初始化\n\n`npm install lottie-web` or `yarn add lottie-web`\n\n```ts\nimport lottie from 'lottie-web';\nimport animationData from 'animationData.json'; // 使用本地资源\n\nconst animation = lottie.loadAnimation({\n  container: element as Element, // the dom element that will contain the animation\n  renderer: 'svg',\n  name: name,\n  loop: true,\n  autoplay: true,\n  animationData\n});\n// 添加事件\nanimation.addEventListener('enterFrame', i => {\n  ...\n});\n```\n\n`loadAnimation`参数定义：\n\n```ts\nexport type AnimationConfig = {\n  container: Element; //动画容器\n  renderer?: 'svg' | 'canvas' | 'html'; //渲染方式\n  loop?: boolean | number; //循环\n  autoplay?: boolean; //自动播放\n  name?: string; //动画名字\n  rendererSettings?:\n    | SVGRendererConfig\n    | CanvasRendererConfig\n    | HTMLRendererConfig; // 渲染设置\n  path?: string; // 动画json路径\n  animationData?: any; //本地动画json数据\n};\n```\n\n初始化完成后，可以对`animation`对象添加事件以及对动画进行控制\n\n#### 事件\n\n`调用方式`\n\n```javascript\nanimation.addEventeListener('event', info => {\n  console.log(info);\n});\n```\n\n| 事件名       | 描述                           |\n| ------------ | ------------------------------ |\n| enterFrame   | 播放每一帧动画的时候触发       |\n| loopComplete | 当前循环播放完成触发           |\n| complete     | 动画播放完成触发               |\n| segmentStart | 开始播放一个动画片段的时候触发 |\n| destroy      | 动画销毁时触发                 |\n\n#### 方法\n\n`调用方式`\n\n```javascript\nanimation.play();\nanimation.setSpeed(1.5);\n```\n\n| 方法名          | 参数及返回类型                            | 描述                           |\n| --------------- | ----------------------------------------- | ------------------------------ |\n| play            | (): void                                  | 播放                           |\n| stop            | (): void                                  | 停止并回到第 0 帧              |\n| pause           | (): void                                  | 暂停                           |\n| setLocationHref | (href: string): void                      | 设置本地资源路径               |\n| setSpeed        | (speed: number): void                     | 设置动画播放速速               |\n| goToAndPlay     | (value: number, isFrame?: boolean): void  | 前进到传入帧并继续播放         |\n| goToAndStop     | (value: number, isFrame?: boolean): void  | 前进到传入帧并停止播放         |\n| setDirection    | (direction: AnimationDirection): void     | 设置动画方向                   |\n| playSegments    | (segments: [], forceFlag?: boolean): void | 播放指定帧数组的动画;          |\n| destroy         | (): void                                  | 主动销毁动画                   |\n| getDuration     | (inFrames?: boolean): number              | 获取动画时长，可按帧或按秒返回 |\n\n### 使用全球设计师分享的动画\n\n> 我们可以在 [lottiefiles](https://lottiefiles.com/) 上看到来自全球优秀设计师们分享的动画，并十分简单的使用它。\n\n### 使用案例\n\n#### 加载远程 json 文件\n\n```typescript\nconst source =\n  'https://assets1.lottiefiles.com/datafiles/AembVTvov5PkTSJ/data.json';\n/**\n * 加载远程json文件\n * @param {string} sourceurl\n * @returns 返回json对象\n */\nconst loadResource = async (sourceurl: string) => {\n  const response = await fetch(sourceurl);\n  const data = await response.json();\n  return data;\n};\nloadResource(String(source)).then(json => {\n  // 加载完成后初始化\n  const animation = lottie.loadAnimation({\n    container: element as Element, // the dom element that will contain the animation\n    renderer: 'svg',\n    name: name,\n    loop: true,\n    autoplay: true,\n    animationData: json,\n  });\n});\n```\n\n###[点击查看demo](https://yechuanjie.com/lottie_demo)\n\n###[github](https://github.com/Yechuanjie/lottie_demo)\n","source":"_posts/lottie.md","raw":"---\ntitle: 使用lottie-web制作高性能动画\ndate: 2019-07-31 12:35:32\ntags:\n  - JavaScript\n  - 动画\ncategories: JavaScript\n---\n\n想提前看下效果的小伙伴请看[这里~](https://yechuanjie.com/lottie_demo)\n\n### Lottie 简介\n\n[Lottie 官网](http://airbnb.io/lottie/)\n\n> Lottie 是一个库，用于解析使用 [AE](https://www.adobe.com/cn/products/aftereffects.html) 制作的动画（动画需要通过 AE 中的 bodymovin 插件将其导出为 json 数据格式），支持`web`、`ios`、`android`和`react native`。 这里主要介绍 Lottie 的 web 版本 **lottie-web** 库，它可以解析导出的动画 json 文件，并将其以 svg 或者 canvas 的方式将动画绘制到页面中。\n\n<!-- more -->\n\n### 为什么使用 Lottie\n\n目前多帧动画一般的实现方式是：\n\n- 前端实现`svg、canvas`动画（实现成本较高、维护成本高）\n- 设计师切`gif`（文件较大、容易有锯齿）\n- `png`序列帧（文件较大、容易有锯齿）\n\n> 目前的动画实现方案有着各自的问题，所以我们需要寻找一种更加简单、高效、性能高的动画方案。airbnb 的 Lottie 是一套良好的动画解决方案。\n\n### Lottie 的优势\n\nLottie 方法方案是由设计师出动画，导出为 json，给前端解析。所以，使用 Lottie 方案的好处在于：\n\n- 动画由设计使用专业的动画制作工具`Adobe After Effects`来实现，使动画实现更加方便，动画效果也更好；\n- 前端可以方便的调用动画，并对动画进行控制，减少前端动画工作量；\n- 设计制作动画，前端展现动画，专业人做专业事，分工合理；\n- 还原程度百分之百；\n- 使用 lottie 方案，json 文件大小会比 gif 文件小很多，性能也会更好。\n\n### Lottie 的不足\n\n- lottie-web 文件比较大，lottie.js 大小为 532k，轻量版压缩后也有 150k，经过 gzip 后，大小为 43k。\n- 如果设计师建了很多的图层，可能仍然有 json 文件较大的问题，需要设计师遵循一定的设计规范。\n\n### lottie-web 使用方式\n\n#### 初始化\n\n`npm install lottie-web` or `yarn add lottie-web`\n\n```ts\nimport lottie from 'lottie-web';\nimport animationData from 'animationData.json'; // 使用本地资源\n\nconst animation = lottie.loadAnimation({\n  container: element as Element, // the dom element that will contain the animation\n  renderer: 'svg',\n  name: name,\n  loop: true,\n  autoplay: true,\n  animationData\n});\n// 添加事件\nanimation.addEventListener('enterFrame', i => {\n  ...\n});\n```\n\n`loadAnimation`参数定义：\n\n```ts\nexport type AnimationConfig = {\n  container: Element; //动画容器\n  renderer?: 'svg' | 'canvas' | 'html'; //渲染方式\n  loop?: boolean | number; //循环\n  autoplay?: boolean; //自动播放\n  name?: string; //动画名字\n  rendererSettings?:\n    | SVGRendererConfig\n    | CanvasRendererConfig\n    | HTMLRendererConfig; // 渲染设置\n  path?: string; // 动画json路径\n  animationData?: any; //本地动画json数据\n};\n```\n\n初始化完成后，可以对`animation`对象添加事件以及对动画进行控制\n\n#### 事件\n\n`调用方式`\n\n```javascript\nanimation.addEventeListener('event', info => {\n  console.log(info);\n});\n```\n\n| 事件名       | 描述                           |\n| ------------ | ------------------------------ |\n| enterFrame   | 播放每一帧动画的时候触发       |\n| loopComplete | 当前循环播放完成触发           |\n| complete     | 动画播放完成触发               |\n| segmentStart | 开始播放一个动画片段的时候触发 |\n| destroy      | 动画销毁时触发                 |\n\n#### 方法\n\n`调用方式`\n\n```javascript\nanimation.play();\nanimation.setSpeed(1.5);\n```\n\n| 方法名          | 参数及返回类型                            | 描述                           |\n| --------------- | ----------------------------------------- | ------------------------------ |\n| play            | (): void                                  | 播放                           |\n| stop            | (): void                                  | 停止并回到第 0 帧              |\n| pause           | (): void                                  | 暂停                           |\n| setLocationHref | (href: string): void                      | 设置本地资源路径               |\n| setSpeed        | (speed: number): void                     | 设置动画播放速速               |\n| goToAndPlay     | (value: number, isFrame?: boolean): void  | 前进到传入帧并继续播放         |\n| goToAndStop     | (value: number, isFrame?: boolean): void  | 前进到传入帧并停止播放         |\n| setDirection    | (direction: AnimationDirection): void     | 设置动画方向                   |\n| playSegments    | (segments: [], forceFlag?: boolean): void | 播放指定帧数组的动画;          |\n| destroy         | (): void                                  | 主动销毁动画                   |\n| getDuration     | (inFrames?: boolean): number              | 获取动画时长，可按帧或按秒返回 |\n\n### 使用全球设计师分享的动画\n\n> 我们可以在 [lottiefiles](https://lottiefiles.com/) 上看到来自全球优秀设计师们分享的动画，并十分简单的使用它。\n\n### 使用案例\n\n#### 加载远程 json 文件\n\n```typescript\nconst source =\n  'https://assets1.lottiefiles.com/datafiles/AembVTvov5PkTSJ/data.json';\n/**\n * 加载远程json文件\n * @param {string} sourceurl\n * @returns 返回json对象\n */\nconst loadResource = async (sourceurl: string) => {\n  const response = await fetch(sourceurl);\n  const data = await response.json();\n  return data;\n};\nloadResource(String(source)).then(json => {\n  // 加载完成后初始化\n  const animation = lottie.loadAnimation({\n    container: element as Element, // the dom element that will contain the animation\n    renderer: 'svg',\n    name: name,\n    loop: true,\n    autoplay: true,\n    animationData: json,\n  });\n});\n```\n\n###[点击查看demo](https://yechuanjie.com/lottie_demo)\n\n###[github](https://github.com/Yechuanjie/lottie_demo)\n","slug":"lottie","published":1,"updated":"2020-03-07T06:01:09.665Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck92alkmv0006aubv284wh3cd","content":"<p>想提前看下效果的小伙伴请看<a href=\"https://yechuanjie.com/lottie_demo\">这里~</a></p>\n<h3 id=\"Lottie-简介\"><a href=\"#Lottie-简介\" class=\"headerlink\" title=\"Lottie 简介\"></a>Lottie 简介</h3><p><a href=\"http://airbnb.io/lottie/\" target=\"_blank\" rel=\"noopener\">Lottie 官网</a></p>\n<blockquote>\n<p>Lottie 是一个库，用于解析使用 <a href=\"https://www.adobe.com/cn/products/aftereffects.html\" target=\"_blank\" rel=\"noopener\">AE</a> 制作的动画（动画需要通过 AE 中的 bodymovin 插件将其导出为 json 数据格式），支持<code>web</code>、<code>ios</code>、<code>android</code>和<code>react native</code>。 这里主要介绍 Lottie 的 web 版本 <strong>lottie-web</strong> 库，它可以解析导出的动画 json 文件，并将其以 svg 或者 canvas 的方式将动画绘制到页面中。</p>\n</blockquote>\n<a id=\"more\"></a>\n<h3 id=\"为什么使用-Lottie\"><a href=\"#为什么使用-Lottie\" class=\"headerlink\" title=\"为什么使用 Lottie\"></a>为什么使用 Lottie</h3><p>目前多帧动画一般的实现方式是：</p>\n<ul>\n<li>前端实现<code>svg、canvas</code>动画（实现成本较高、维护成本高）</li>\n<li>设计师切<code>gif</code>（文件较大、容易有锯齿）</li>\n<li><code>png</code>序列帧（文件较大、容易有锯齿）</li>\n</ul>\n<blockquote>\n<p>目前的动画实现方案有着各自的问题，所以我们需要寻找一种更加简单、高效、性能高的动画方案。airbnb 的 Lottie 是一套良好的动画解决方案。</p>\n</blockquote>\n<h3 id=\"Lottie-的优势\"><a href=\"#Lottie-的优势\" class=\"headerlink\" title=\"Lottie 的优势\"></a>Lottie 的优势</h3><p>Lottie 方法方案是由设计师出动画，导出为 json，给前端解析。所以，使用 Lottie 方案的好处在于：</p>\n<ul>\n<li>动画由设计使用专业的动画制作工具<code>Adobe After Effects</code>来实现，使动画实现更加方便，动画效果也更好；</li>\n<li>前端可以方便的调用动画，并对动画进行控制，减少前端动画工作量；</li>\n<li>设计制作动画，前端展现动画，专业人做专业事，分工合理；</li>\n<li>还原程度百分之百；</li>\n<li>使用 lottie 方案，json 文件大小会比 gif 文件小很多，性能也会更好。</li>\n</ul>\n<h3 id=\"Lottie-的不足\"><a href=\"#Lottie-的不足\" class=\"headerlink\" title=\"Lottie 的不足\"></a>Lottie 的不足</h3><ul>\n<li>lottie-web 文件比较大，lottie.js 大小为 532k，轻量版压缩后也有 150k，经过 gzip 后，大小为 43k。</li>\n<li>如果设计师建了很多的图层，可能仍然有 json 文件较大的问题，需要设计师遵循一定的设计规范。</li>\n</ul>\n<h3 id=\"lottie-web-使用方式\"><a href=\"#lottie-web-使用方式\" class=\"headerlink\" title=\"lottie-web 使用方式\"></a>lottie-web 使用方式</h3><h4 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h4><p><code>npm install lottie-web</code> or <code>yarn add lottie-web</code></p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> lottie <span class=\"keyword\">from</span> <span class=\"string\">'lottie-web'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> animationData <span class=\"keyword\">from</span> <span class=\"string\">'animationData.json'</span>; <span class=\"comment\">// 使用本地资源</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> animation = lottie.loadAnimation(&#123;</span><br><span class=\"line\">  container: element <span class=\"keyword\">as</span> Element, <span class=\"comment\">// the dom element that will contain the animation</span></span><br><span class=\"line\">  renderer: <span class=\"string\">'svg'</span>,</span><br><span class=\"line\">  name: name,</span><br><span class=\"line\">  loop: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  autoplay: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  animationData</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 添加事件</span></span><br><span class=\"line\">animation.addEventListener(<span class=\"string\">'enterFrame'</span>, <span class=\"function\"><span class=\"params\">i</span> =&gt;</span> &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p><code>loadAnimation</code>参数定义：</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">type</span> AnimationConfig = &#123;</span><br><span class=\"line\">  container: Element; <span class=\"comment\">//动画容器</span></span><br><span class=\"line\">  renderer?: <span class=\"string\">'svg'</span> | <span class=\"string\">'canvas'</span> | <span class=\"string\">'html'</span>; <span class=\"comment\">//渲染方式</span></span><br><span class=\"line\">  loop?: <span class=\"built_in\">boolean</span> | <span class=\"built_in\">number</span>; <span class=\"comment\">//循环</span></span><br><span class=\"line\">  autoplay?: <span class=\"built_in\">boolean</span>; <span class=\"comment\">//自动播放</span></span><br><span class=\"line\">  name?: <span class=\"built_in\">string</span>; <span class=\"comment\">//动画名字</span></span><br><span class=\"line\">  rendererSettings?:</span><br><span class=\"line\">    | SVGRendererConfig</span><br><span class=\"line\">    | CanvasRendererConfig</span><br><span class=\"line\">    | HTMLRendererConfig; <span class=\"comment\">// 渲染设置</span></span><br><span class=\"line\">  path?: <span class=\"built_in\">string</span>; <span class=\"comment\">// 动画json路径</span></span><br><span class=\"line\">  animationData?: <span class=\"built_in\">any</span>; <span class=\"comment\">//本地动画json数据</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>初始化完成后，可以对<code>animation</code>对象添加事件以及对动画进行控制</p>\n<h4 id=\"事件\"><a href=\"#事件\" class=\"headerlink\" title=\"事件\"></a>事件</h4><p><code>调用方式</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">animation.addEventeListener(<span class=\"string\">'event'</span>, info =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(info);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>事件名</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>enterFrame</td>\n<td>播放每一帧动画的时候触发</td>\n</tr>\n<tr>\n<td>loopComplete</td>\n<td>当前循环播放完成触发</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>动画播放完成触发</td>\n</tr>\n<tr>\n<td>segmentStart</td>\n<td>开始播放一个动画片段的时候触发</td>\n</tr>\n<tr>\n<td>destroy</td>\n<td>动画销毁时触发</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h4><p><code>调用方式</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">animation.play();</span><br><span class=\"line\">animation.setSpeed(<span class=\"number\">1.5</span>);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>参数及返回类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>play</td>\n<td>(): void</td>\n<td>播放</td>\n</tr>\n<tr>\n<td>stop</td>\n<td>(): void</td>\n<td>停止并回到第 0 帧</td>\n</tr>\n<tr>\n<td>pause</td>\n<td>(): void</td>\n<td>暂停</td>\n</tr>\n<tr>\n<td>setLocationHref</td>\n<td>(href: string): void</td>\n<td>设置本地资源路径</td>\n</tr>\n<tr>\n<td>setSpeed</td>\n<td>(speed: number): void</td>\n<td>设置动画播放速速</td>\n</tr>\n<tr>\n<td>goToAndPlay</td>\n<td>(value: number, isFrame?: boolean): void</td>\n<td>前进到传入帧并继续播放</td>\n</tr>\n<tr>\n<td>goToAndStop</td>\n<td>(value: number, isFrame?: boolean): void</td>\n<td>前进到传入帧并停止播放</td>\n</tr>\n<tr>\n<td>setDirection</td>\n<td>(direction: AnimationDirection): void</td>\n<td>设置动画方向</td>\n</tr>\n<tr>\n<td>playSegments</td>\n<td>(segments: [], forceFlag?: boolean): void</td>\n<td>播放指定帧数组的动画;</td>\n</tr>\n<tr>\n<td>destroy</td>\n<td>(): void</td>\n<td>主动销毁动画</td>\n</tr>\n<tr>\n<td>getDuration</td>\n<td>(inFrames?: boolean): number</td>\n<td>获取动画时长，可按帧或按秒返回</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"使用全球设计师分享的动画\"><a href=\"#使用全球设计师分享的动画\" class=\"headerlink\" title=\"使用全球设计师分享的动画\"></a>使用全球设计师分享的动画</h3><blockquote>\n<p>我们可以在 <a href=\"https://lottiefiles.com/\" target=\"_blank\" rel=\"noopener\">lottiefiles</a> 上看到来自全球优秀设计师们分享的动画，并十分简单的使用它。</p>\n</blockquote>\n<h3 id=\"使用案例\"><a href=\"#使用案例\" class=\"headerlink\" title=\"使用案例\"></a>使用案例</h3><h4 id=\"加载远程-json-文件\"><a href=\"#加载远程-json-文件\" class=\"headerlink\" title=\"加载远程 json 文件\"></a>加载远程 json 文件</h4><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> source =</span><br><span class=\"line\">  <span class=\"string\">'https://assets1.lottiefiles.com/datafiles/AembVTvov5PkTSJ/data.json'</span>;</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 加载远程json文件</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;string&#125; sourceurl</span></span><br><span class=\"line\"><span class=\"comment\"> * @returns 返回json对象</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> loadResource = <span class=\"keyword\">async</span> (sourceurl: <span class=\"built_in\">string</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> response = <span class=\"keyword\">await</span> fetch(sourceurl);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> data = <span class=\"keyword\">await</span> response.json();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> data;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">loadResource(<span class=\"built_in\">String</span>(source)).then(<span class=\"function\"><span class=\"params\">json</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 加载完成后初始化</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> animation = lottie.loadAnimation(&#123;</span><br><span class=\"line\">    container: element <span class=\"keyword\">as</span> Element, <span class=\"comment\">// the dom element that will contain the animation</span></span><br><span class=\"line\">    renderer: <span class=\"string\">'svg'</span>,</span><br><span class=\"line\">    name: name,</span><br><span class=\"line\">    loop: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    autoplay: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    animationData: json,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>###<a href=\"https://yechuanjie.com/lottie_demo\">点击查看demo</a></p>\n<p>###<a href=\"https://github.com/Yechuanjie/lottie_demo\" target=\"_blank\" rel=\"noopener\">github</a></p>\n","site":{"data":{"gallery":{"source":[{"link":"https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-4-18/61933480.jpg","desc":"涂鸦"},{"link":"https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-4-18/86403488.jpg","desc":"云南石林"}]}}},"excerpt":"<p>想提前看下效果的小伙伴请看<a href=\"https://yechuanjie.com/lottie_demo\">这里~</a></p>\n<h3 id=\"Lottie-简介\"><a href=\"#Lottie-简介\" class=\"headerlink\" title=\"Lottie 简介\"></a>Lottie 简介</h3><p><a href=\"http://airbnb.io/lottie/\" target=\"_blank\" rel=\"noopener\">Lottie 官网</a></p>\n<blockquote>\n<p>Lottie 是一个库，用于解析使用 <a href=\"https://www.adobe.com/cn/products/aftereffects.html\" target=\"_blank\" rel=\"noopener\">AE</a> 制作的动画（动画需要通过 AE 中的 bodymovin 插件将其导出为 json 数据格式），支持<code>web</code>、<code>ios</code>、<code>android</code>和<code>react native</code>。 这里主要介绍 Lottie 的 web 版本 <strong>lottie-web</strong> 库，它可以解析导出的动画 json 文件，并将其以 svg 或者 canvas 的方式将动画绘制到页面中。</p>\n</blockquote>","more":"<h3 id=\"为什么使用-Lottie\"><a href=\"#为什么使用-Lottie\" class=\"headerlink\" title=\"为什么使用 Lottie\"></a>为什么使用 Lottie</h3><p>目前多帧动画一般的实现方式是：</p>\n<ul>\n<li>前端实现<code>svg、canvas</code>动画（实现成本较高、维护成本高）</li>\n<li>设计师切<code>gif</code>（文件较大、容易有锯齿）</li>\n<li><code>png</code>序列帧（文件较大、容易有锯齿）</li>\n</ul>\n<blockquote>\n<p>目前的动画实现方案有着各自的问题，所以我们需要寻找一种更加简单、高效、性能高的动画方案。airbnb 的 Lottie 是一套良好的动画解决方案。</p>\n</blockquote>\n<h3 id=\"Lottie-的优势\"><a href=\"#Lottie-的优势\" class=\"headerlink\" title=\"Lottie 的优势\"></a>Lottie 的优势</h3><p>Lottie 方法方案是由设计师出动画，导出为 json，给前端解析。所以，使用 Lottie 方案的好处在于：</p>\n<ul>\n<li>动画由设计使用专业的动画制作工具<code>Adobe After Effects</code>来实现，使动画实现更加方便，动画效果也更好；</li>\n<li>前端可以方便的调用动画，并对动画进行控制，减少前端动画工作量；</li>\n<li>设计制作动画，前端展现动画，专业人做专业事，分工合理；</li>\n<li>还原程度百分之百；</li>\n<li>使用 lottie 方案，json 文件大小会比 gif 文件小很多，性能也会更好。</li>\n</ul>\n<h3 id=\"Lottie-的不足\"><a href=\"#Lottie-的不足\" class=\"headerlink\" title=\"Lottie 的不足\"></a>Lottie 的不足</h3><ul>\n<li>lottie-web 文件比较大，lottie.js 大小为 532k，轻量版压缩后也有 150k，经过 gzip 后，大小为 43k。</li>\n<li>如果设计师建了很多的图层，可能仍然有 json 文件较大的问题，需要设计师遵循一定的设计规范。</li>\n</ul>\n<h3 id=\"lottie-web-使用方式\"><a href=\"#lottie-web-使用方式\" class=\"headerlink\" title=\"lottie-web 使用方式\"></a>lottie-web 使用方式</h3><h4 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h4><p><code>npm install lottie-web</code> or <code>yarn add lottie-web</code></p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> lottie <span class=\"keyword\">from</span> <span class=\"string\">'lottie-web'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> animationData <span class=\"keyword\">from</span> <span class=\"string\">'animationData.json'</span>; <span class=\"comment\">// 使用本地资源</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> animation = lottie.loadAnimation(&#123;</span><br><span class=\"line\">  container: element <span class=\"keyword\">as</span> Element, <span class=\"comment\">// the dom element that will contain the animation</span></span><br><span class=\"line\">  renderer: <span class=\"string\">'svg'</span>,</span><br><span class=\"line\">  name: name,</span><br><span class=\"line\">  loop: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  autoplay: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  animationData</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 添加事件</span></span><br><span class=\"line\">animation.addEventListener(<span class=\"string\">'enterFrame'</span>, <span class=\"function\"><span class=\"params\">i</span> =&gt;</span> &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p><code>loadAnimation</code>参数定义：</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">type</span> AnimationConfig = &#123;</span><br><span class=\"line\">  container: Element; <span class=\"comment\">//动画容器</span></span><br><span class=\"line\">  renderer?: <span class=\"string\">'svg'</span> | <span class=\"string\">'canvas'</span> | <span class=\"string\">'html'</span>; <span class=\"comment\">//渲染方式</span></span><br><span class=\"line\">  loop?: <span class=\"built_in\">boolean</span> | <span class=\"built_in\">number</span>; <span class=\"comment\">//循环</span></span><br><span class=\"line\">  autoplay?: <span class=\"built_in\">boolean</span>; <span class=\"comment\">//自动播放</span></span><br><span class=\"line\">  name?: <span class=\"built_in\">string</span>; <span class=\"comment\">//动画名字</span></span><br><span class=\"line\">  rendererSettings?:</span><br><span class=\"line\">    | SVGRendererConfig</span><br><span class=\"line\">    | CanvasRendererConfig</span><br><span class=\"line\">    | HTMLRendererConfig; <span class=\"comment\">// 渲染设置</span></span><br><span class=\"line\">  path?: <span class=\"built_in\">string</span>; <span class=\"comment\">// 动画json路径</span></span><br><span class=\"line\">  animationData?: <span class=\"built_in\">any</span>; <span class=\"comment\">//本地动画json数据</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>初始化完成后，可以对<code>animation</code>对象添加事件以及对动画进行控制</p>\n<h4 id=\"事件\"><a href=\"#事件\" class=\"headerlink\" title=\"事件\"></a>事件</h4><p><code>调用方式</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">animation.addEventeListener(<span class=\"string\">'event'</span>, info =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(info);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>事件名</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>enterFrame</td>\n<td>播放每一帧动画的时候触发</td>\n</tr>\n<tr>\n<td>loopComplete</td>\n<td>当前循环播放完成触发</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>动画播放完成触发</td>\n</tr>\n<tr>\n<td>segmentStart</td>\n<td>开始播放一个动画片段的时候触发</td>\n</tr>\n<tr>\n<td>destroy</td>\n<td>动画销毁时触发</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h4><p><code>调用方式</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">animation.play();</span><br><span class=\"line\">animation.setSpeed(<span class=\"number\">1.5</span>);</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>参数及返回类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>play</td>\n<td>(): void</td>\n<td>播放</td>\n</tr>\n<tr>\n<td>stop</td>\n<td>(): void</td>\n<td>停止并回到第 0 帧</td>\n</tr>\n<tr>\n<td>pause</td>\n<td>(): void</td>\n<td>暂停</td>\n</tr>\n<tr>\n<td>setLocationHref</td>\n<td>(href: string): void</td>\n<td>设置本地资源路径</td>\n</tr>\n<tr>\n<td>setSpeed</td>\n<td>(speed: number): void</td>\n<td>设置动画播放速速</td>\n</tr>\n<tr>\n<td>goToAndPlay</td>\n<td>(value: number, isFrame?: boolean): void</td>\n<td>前进到传入帧并继续播放</td>\n</tr>\n<tr>\n<td>goToAndStop</td>\n<td>(value: number, isFrame?: boolean): void</td>\n<td>前进到传入帧并停止播放</td>\n</tr>\n<tr>\n<td>setDirection</td>\n<td>(direction: AnimationDirection): void</td>\n<td>设置动画方向</td>\n</tr>\n<tr>\n<td>playSegments</td>\n<td>(segments: [], forceFlag?: boolean): void</td>\n<td>播放指定帧数组的动画;</td>\n</tr>\n<tr>\n<td>destroy</td>\n<td>(): void</td>\n<td>主动销毁动画</td>\n</tr>\n<tr>\n<td>getDuration</td>\n<td>(inFrames?: boolean): number</td>\n<td>获取动画时长，可按帧或按秒返回</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"使用全球设计师分享的动画\"><a href=\"#使用全球设计师分享的动画\" class=\"headerlink\" title=\"使用全球设计师分享的动画\"></a>使用全球设计师分享的动画</h3><blockquote>\n<p>我们可以在 <a href=\"https://lottiefiles.com/\" target=\"_blank\" rel=\"noopener\">lottiefiles</a> 上看到来自全球优秀设计师们分享的动画，并十分简单的使用它。</p>\n</blockquote>\n<h3 id=\"使用案例\"><a href=\"#使用案例\" class=\"headerlink\" title=\"使用案例\"></a>使用案例</h3><h4 id=\"加载远程-json-文件\"><a href=\"#加载远程-json-文件\" class=\"headerlink\" title=\"加载远程 json 文件\"></a>加载远程 json 文件</h4><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> source =</span><br><span class=\"line\">  <span class=\"string\">'https://assets1.lottiefiles.com/datafiles/AembVTvov5PkTSJ/data.json'</span>;</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 加载远程json文件</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;string&#125; sourceurl</span></span><br><span class=\"line\"><span class=\"comment\"> * @returns 返回json对象</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> loadResource = <span class=\"keyword\">async</span> (sourceurl: <span class=\"built_in\">string</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> response = <span class=\"keyword\">await</span> fetch(sourceurl);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> data = <span class=\"keyword\">await</span> response.json();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> data;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">loadResource(<span class=\"built_in\">String</span>(source)).then(<span class=\"function\"><span class=\"params\">json</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 加载完成后初始化</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> animation = lottie.loadAnimation(&#123;</span><br><span class=\"line\">    container: element <span class=\"keyword\">as</span> Element, <span class=\"comment\">// the dom element that will contain the animation</span></span><br><span class=\"line\">    renderer: <span class=\"string\">'svg'</span>,</span><br><span class=\"line\">    name: name,</span><br><span class=\"line\">    loop: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    autoplay: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    animationData: json,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>###<a href=\"https://yechuanjie.com/lottie_demo\">点击查看demo</a></p>\n<p>###<a href=\"https://github.com/Yechuanjie/lottie_demo\" target=\"_blank\" rel=\"noopener\">github</a></p>"},{"title":"Taro初探","date":"2019-02-21T13:18:11.000Z","_content":"\n> 👽 Taro['tɑ:roʊ]，泰罗·奥特曼，宇宙警备队总教官，实力最强的奥特曼。多端统一开发框架，支持用 React 的开发方式编写一次代码，生成能运行在**小程序端**、**H5**、**React Native**等各平台的应用。\n\n<!-- more -->\n\n### JSX篇\n\n#### jsx支持情况\n\n- 不能使用 **Array#map** 之外的方法操作 JSX 数组\n```jsx\nconst numbers = [1,2,3,4,5];\nnumbers.forEach(numbers => { // Taro中这里必须用map\n  if (someCase) {\n    return(\n      <View />\n    )\n  }\n})\n```\n- 不能在 JSX 参数中使用**匿名函数**\n```jsx\n<View onClick={() => {this.openPic}}></View>  \n```\n- 暂不支持在 render() 之外的方法定义 JSX\n  假设现在页面中有一个音乐组件，不能这样使用\n```jsx\nconst music = require('../assets/music.mp3');\nconst loop = true;\nmusicComponent = () => {\n  return (\n    <Audio src={music} loop={loop} />\n  )\n}\nrender() {\n  return (\n    {this.musicComponent()}\n  )\n}\n```\n\n- 不能在 JSX 参数中使用对象展开符\n```jsx\n<View {...this.props} />\n```\n- 不支持无状态组件\n\n  由于微信的 template 能力有限，不支持动态传值和函数，Taro 暂时只支持一个文件只定义一个组件。为了避免开发者疑惑，暂时不支持定义**无状态组件**。\n\n\n#### 所有元素组件化\n\n- 不能使用html标签，所有标签以**组件**形式书写。Taro实现了以微信小程序组件库为标准，结合jsx语法规范，定制了一套[组件库](https://nervjs.github.io/taro/docs/components-desc.html)，在不同的端上，会使用不同端的对应组件。\n\n- 组件名不能和页面名相同。\n\n---\n\n### 配置篇\n\n#### 项目配置\n项目初始后会默认自带微信小程序的配置文件**project.config.js**。\n打包成其他平台小程序前，需要对应在根目录添加对应配置文件，否则运行报错。\n- 微信小程序，[project.config.json](https://developers.weixin.qq.com/miniprogram/dev/devtools/projectconfig.html?search-key=%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE)\n- 百度智能小程序，[project.swan.json](https://smartprogram.baidu.com/docs/develop/devtools/projectconfig/)\n- 头条小程序，project.tt.json，文档暂无，大部分字段与微信小程序一致\n- 支付宝小程序，无\n\n\n----------\n\n### 样式篇\n\n#### 兼容问题\n如果只需要兼容**小程序**以及**h5端**，基本上所有css属性都能使用。\n\n如果要支持 **React Native** 端，必须采用 **Flex** 布局，并且样式选择器仅支持**类选择器**，且不支持 **组合选择器**。以下写法都是不支持的\n\n```css\n.button.button_theme_islands{\n  font-style: bold;\n}\nimg + p {\n  font-style: bold;\n}\n\np ~ span {\n  color: red;\n}\n\ndiv > span {\n  background-color: DodgerBlue;\n}\ndiv span {\n  background-color: DodgerBlue;\n}\n```\n\nReact Native端支持的css属性较少，比如不支持**background-image**，只能使用**Image**组件，配合Flex布局来实现。**box-shadow**不支持，position只支持**absolute**和**relative**。 更多属性，见详细的[css属性列表](https://reactnative.cn/docs/layout-props/)。\n\n#### 编译成React-Native\n一个简单的按钮，css样式如下：\n```css\n.back {\n    width: 100%;\n    margin-top: 500px;\n}\n.back_btn {\n    width: 300px;\n    height: 100px;\n    text-align: center;\n    line-height: 100px;\n    font-size: 50px;\n    margin: 0 auto;\n    background: cadetblue;\n    border-radius: 70px;\n    color: aliceblue;\n}\n```\n\n编译之后\n\n```javascript\nimport { StyleSheet } from 'react-native'\n\nexport default StyleSheet.create({\n  \"back\": {\n    \"width\": \"100%\",\n    \"marginTop\": 250\n  },\n  \"back_btn\": {\n    \"width\": 150,\n    \"height\": 50,\n    \"textAlign\": \"center\",\n    \"lineHeight\": 50,\n    \"fontSize\": 25,\n    \"marginTop\": 0,\n    \"marginRight\": \"auto\",\n    \"marginBottom\": 0,\n    \"marginLeft\": \"auto\",\n    \"backgroundColor\": \"cadetblue\",\n    \"borderRadius\": 35,\n    \"color\": \"aliceblue\"\n  }\n})\n```\nReact Native中，会使用StyleSheet.create来集中定义组件的样式。[了解更多](https://reactnative.cn/docs/style/)\n\n\n\n#### CSS单位\n以750px设计稿为基准，css样式以px为单位，如750px设计稿，一个按钮200*100。\n```css\nwidth:200px;\nheight:100px\n```\n\n设计稿尺寸可以在config文件中配置**designWidth**和**deviceRatio**字段。\n\n> Taro会根据不同平台来编译px，小程序中px转换成rpx，h5中则转换成rem，react-native中转换成pt。如果不希望单位被转换，可以通过写成Px 或 PX来避免。\n\n#### 默认样式\n\n一些默认组件如**button**、**image**的默认样式在各个平台上不一致，开发前需要重置样式。\n\n\n### 实际项目中遇到的问题\n\n - h5中使用第三方js\n  h5端可能会使用到三方js库，如果在小程序环境中，遇到window，document之类的变量，则会导致错误，解决方案是通过**Taro.getEnv()**判断环境后，按需引入三方库\n\n - audio问题\n  微信小程序中，音频会以**createAudioContext**来处理，相关音频的操作，也只能使用**playVoice**，**pauseVoice**等方法。这些方法在h5，react native及其他部分小程序中都是不支持的。因此只能通过不同的环境做不同的处理。\n\n  以下是点击音乐图标后，控制音乐暂停/播放的方法\n  ```jsx\n  toggleMusic = () => {\n    this.setState({\n      musicStatus: !this.state.musicStatus,\n    });\n    let audio;\n    if (Taro.getEnv() === 'WEAPP') {\n        audio = Taro.createAudioContext('audio');\n        this.state.musicStatus ? Taro.pauseVoice() : Taro.playVoice();\n    } else if (Taro.getEnv() === 'WEB'){\n        audio = document.querySelector('audio');\n        this.state.musicStatus ? audio.pause() : audio.play();\n    } else {\n        audio = ... //对应平台获取audio对象的方法\n        this.state.musicStatus ? audio.pause() : audio.play();\n    }\n  };\n  ```\n\n### React Native平台调试\n\n![chrome](https://qiniu.image.cq-wnl.com/content/20190228f9a18bfcb9784471ac1e862b71b6cde7.png)\n\n\n### 总结\n\n总体来说，Taro的开发体验还是不错的。在编译不同平台的时候，可以通过配置config/index.js中的outputRoot，来达到同时编译多个平台的代码的效果。\n```javascript\nconst config = {\n  outputRoot: `dist/${process.env.TARO_ENV}`,\n}\n```\nTaro对小程序端的兼容性基本一致，按照Taro规范的语法和组件来书写项目，基本能实现各端小程序以及h5端的统一开发。react native端由于环境特殊，存在许多特殊的api无法通用的情况，只能通过获取当前环境来做兼容处理。\n","source":"_posts/Taro.md","raw":"---\ntitle: Taro初探\ndate: 2019-02-21 13:18:11\ntags: \n  - Taro\n  - React\ncategories: 多端统一\n---\n\n> 👽 Taro['tɑ:roʊ]，泰罗·奥特曼，宇宙警备队总教官，实力最强的奥特曼。多端统一开发框架，支持用 React 的开发方式编写一次代码，生成能运行在**小程序端**、**H5**、**React Native**等各平台的应用。\n\n<!-- more -->\n\n### JSX篇\n\n#### jsx支持情况\n\n- 不能使用 **Array#map** 之外的方法操作 JSX 数组\n```jsx\nconst numbers = [1,2,3,4,5];\nnumbers.forEach(numbers => { // Taro中这里必须用map\n  if (someCase) {\n    return(\n      <View />\n    )\n  }\n})\n```\n- 不能在 JSX 参数中使用**匿名函数**\n```jsx\n<View onClick={() => {this.openPic}}></View>  \n```\n- 暂不支持在 render() 之外的方法定义 JSX\n  假设现在页面中有一个音乐组件，不能这样使用\n```jsx\nconst music = require('../assets/music.mp3');\nconst loop = true;\nmusicComponent = () => {\n  return (\n    <Audio src={music} loop={loop} />\n  )\n}\nrender() {\n  return (\n    {this.musicComponent()}\n  )\n}\n```\n\n- 不能在 JSX 参数中使用对象展开符\n```jsx\n<View {...this.props} />\n```\n- 不支持无状态组件\n\n  由于微信的 template 能力有限，不支持动态传值和函数，Taro 暂时只支持一个文件只定义一个组件。为了避免开发者疑惑，暂时不支持定义**无状态组件**。\n\n\n#### 所有元素组件化\n\n- 不能使用html标签，所有标签以**组件**形式书写。Taro实现了以微信小程序组件库为标准，结合jsx语法规范，定制了一套[组件库](https://nervjs.github.io/taro/docs/components-desc.html)，在不同的端上，会使用不同端的对应组件。\n\n- 组件名不能和页面名相同。\n\n---\n\n### 配置篇\n\n#### 项目配置\n项目初始后会默认自带微信小程序的配置文件**project.config.js**。\n打包成其他平台小程序前，需要对应在根目录添加对应配置文件，否则运行报错。\n- 微信小程序，[project.config.json](https://developers.weixin.qq.com/miniprogram/dev/devtools/projectconfig.html?search-key=%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE)\n- 百度智能小程序，[project.swan.json](https://smartprogram.baidu.com/docs/develop/devtools/projectconfig/)\n- 头条小程序，project.tt.json，文档暂无，大部分字段与微信小程序一致\n- 支付宝小程序，无\n\n\n----------\n\n### 样式篇\n\n#### 兼容问题\n如果只需要兼容**小程序**以及**h5端**，基本上所有css属性都能使用。\n\n如果要支持 **React Native** 端，必须采用 **Flex** 布局，并且样式选择器仅支持**类选择器**，且不支持 **组合选择器**。以下写法都是不支持的\n\n```css\n.button.button_theme_islands{\n  font-style: bold;\n}\nimg + p {\n  font-style: bold;\n}\n\np ~ span {\n  color: red;\n}\n\ndiv > span {\n  background-color: DodgerBlue;\n}\ndiv span {\n  background-color: DodgerBlue;\n}\n```\n\nReact Native端支持的css属性较少，比如不支持**background-image**，只能使用**Image**组件，配合Flex布局来实现。**box-shadow**不支持，position只支持**absolute**和**relative**。 更多属性，见详细的[css属性列表](https://reactnative.cn/docs/layout-props/)。\n\n#### 编译成React-Native\n一个简单的按钮，css样式如下：\n```css\n.back {\n    width: 100%;\n    margin-top: 500px;\n}\n.back_btn {\n    width: 300px;\n    height: 100px;\n    text-align: center;\n    line-height: 100px;\n    font-size: 50px;\n    margin: 0 auto;\n    background: cadetblue;\n    border-radius: 70px;\n    color: aliceblue;\n}\n```\n\n编译之后\n\n```javascript\nimport { StyleSheet } from 'react-native'\n\nexport default StyleSheet.create({\n  \"back\": {\n    \"width\": \"100%\",\n    \"marginTop\": 250\n  },\n  \"back_btn\": {\n    \"width\": 150,\n    \"height\": 50,\n    \"textAlign\": \"center\",\n    \"lineHeight\": 50,\n    \"fontSize\": 25,\n    \"marginTop\": 0,\n    \"marginRight\": \"auto\",\n    \"marginBottom\": 0,\n    \"marginLeft\": \"auto\",\n    \"backgroundColor\": \"cadetblue\",\n    \"borderRadius\": 35,\n    \"color\": \"aliceblue\"\n  }\n})\n```\nReact Native中，会使用StyleSheet.create来集中定义组件的样式。[了解更多](https://reactnative.cn/docs/style/)\n\n\n\n#### CSS单位\n以750px设计稿为基准，css样式以px为单位，如750px设计稿，一个按钮200*100。\n```css\nwidth:200px;\nheight:100px\n```\n\n设计稿尺寸可以在config文件中配置**designWidth**和**deviceRatio**字段。\n\n> Taro会根据不同平台来编译px，小程序中px转换成rpx，h5中则转换成rem，react-native中转换成pt。如果不希望单位被转换，可以通过写成Px 或 PX来避免。\n\n#### 默认样式\n\n一些默认组件如**button**、**image**的默认样式在各个平台上不一致，开发前需要重置样式。\n\n\n### 实际项目中遇到的问题\n\n - h5中使用第三方js\n  h5端可能会使用到三方js库，如果在小程序环境中，遇到window，document之类的变量，则会导致错误，解决方案是通过**Taro.getEnv()**判断环境后，按需引入三方库\n\n - audio问题\n  微信小程序中，音频会以**createAudioContext**来处理，相关音频的操作，也只能使用**playVoice**，**pauseVoice**等方法。这些方法在h5，react native及其他部分小程序中都是不支持的。因此只能通过不同的环境做不同的处理。\n\n  以下是点击音乐图标后，控制音乐暂停/播放的方法\n  ```jsx\n  toggleMusic = () => {\n    this.setState({\n      musicStatus: !this.state.musicStatus,\n    });\n    let audio;\n    if (Taro.getEnv() === 'WEAPP') {\n        audio = Taro.createAudioContext('audio');\n        this.state.musicStatus ? Taro.pauseVoice() : Taro.playVoice();\n    } else if (Taro.getEnv() === 'WEB'){\n        audio = document.querySelector('audio');\n        this.state.musicStatus ? audio.pause() : audio.play();\n    } else {\n        audio = ... //对应平台获取audio对象的方法\n        this.state.musicStatus ? audio.pause() : audio.play();\n    }\n  };\n  ```\n\n### React Native平台调试\n\n![chrome](https://qiniu.image.cq-wnl.com/content/20190228f9a18bfcb9784471ac1e862b71b6cde7.png)\n\n\n### 总结\n\n总体来说，Taro的开发体验还是不错的。在编译不同平台的时候，可以通过配置config/index.js中的outputRoot，来达到同时编译多个平台的代码的效果。\n```javascript\nconst config = {\n  outputRoot: `dist/${process.env.TARO_ENV}`,\n}\n```\nTaro对小程序端的兼容性基本一致，按照Taro规范的语法和组件来书写项目，基本能实现各端小程序以及h5端的统一开发。react native端由于环境特殊，存在许多特殊的api无法通用的情况，只能通过获取当前环境来做兼容处理。\n","slug":"Taro","published":1,"updated":"2020-03-07T06:01:09.665Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck92alkmx0008aubvon2y3oyp","content":"<blockquote>\n<p>👽 Taro[‘tɑ:roʊ]，泰罗·奥特曼，宇宙警备队总教官，实力最强的奥特曼。多端统一开发框架，支持用 React 的开发方式编写一次代码，生成能运行在<strong>小程序端</strong>、<strong>H5</strong>、<strong>React Native</strong>等各平台的应用。</p>\n</blockquote>\n<a id=\"more\"></a>\n<h3 id=\"JSX篇\"><a href=\"#JSX篇\" class=\"headerlink\" title=\"JSX篇\"></a>JSX篇</h3><h4 id=\"jsx支持情况\"><a href=\"#jsx支持情况\" class=\"headerlink\" title=\"jsx支持情况\"></a>jsx支持情况</h4><ul>\n<li><p>不能使用 <strong>Array#map</strong> 之外的方法操作 JSX 数组</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> numbers = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>];</span><br><span class=\"line\">numbers.forEach(<span class=\"function\"><span class=\"params\">numbers</span> =&gt;</span> &#123; <span class=\"comment\">// Taro中这里必须用map</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (someCase) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>(</span><br><span class=\"line\">      &lt;View /&gt;</span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>不能在 JSX 参数中使用<strong>匿名函数</strong></p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;View onClick=&#123;() =&gt; &#123;<span class=\"keyword\">this</span>.openPic&#125;&#125;&gt;&lt;/View&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>暂不支持在 render() 之外的方法定义 JSX<br>假设现在页面中有一个音乐组件，不能这样使用</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> music = <span class=\"built_in\">require</span>(<span class=\"string\">'../assets/music.mp3'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> loop = <span class=\"literal\">true</span>;</span><br><span class=\"line\">musicComponent = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;Audio src=&#123;music&#125; loop=&#123;loop&#125; /&gt;</span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">render() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &#123;<span class=\"keyword\">this</span>.musicComponent()&#125;</span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>不能在 JSX 参数中使用对象展开符</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;View &#123;...this.props&#125; /&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>不支持无状态组件</p>\n<p>由于微信的 template 能力有限，不支持动态传值和函数，Taro 暂时只支持一个文件只定义一个组件。为了避免开发者疑惑，暂时不支持定义<strong>无状态组件</strong>。</p>\n</li>\n</ul>\n<h4 id=\"所有元素组件化\"><a href=\"#所有元素组件化\" class=\"headerlink\" title=\"所有元素组件化\"></a>所有元素组件化</h4><ul>\n<li><p>不能使用html标签，所有标签以<strong>组件</strong>形式书写。Taro实现了以微信小程序组件库为标准，结合jsx语法规范，定制了一套<a href=\"https://nervjs.github.io/taro/docs/components-desc.html\" target=\"_blank\" rel=\"noopener\">组件库</a>，在不同的端上，会使用不同端的对应组件。</p>\n</li>\n<li><p>组件名不能和页面名相同。</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"配置篇\"><a href=\"#配置篇\" class=\"headerlink\" title=\"配置篇\"></a>配置篇</h3><h4 id=\"项目配置\"><a href=\"#项目配置\" class=\"headerlink\" title=\"项目配置\"></a>项目配置</h4><p>项目初始后会默认自带微信小程序的配置文件<strong>project.config.js</strong>。<br>打包成其他平台小程序前，需要对应在根目录添加对应配置文件，否则运行报错。</p>\n<ul>\n<li>微信小程序，<a href=\"https://developers.weixin.qq.com/miniprogram/dev/devtools/projectconfig.html?search-key=%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE\" target=\"_blank\" rel=\"noopener\">project.config.json</a></li>\n<li>百度智能小程序，<a href=\"https://smartprogram.baidu.com/docs/develop/devtools/projectconfig/\" target=\"_blank\" rel=\"noopener\">project.swan.json</a></li>\n<li>头条小程序，project.tt.json，文档暂无，大部分字段与微信小程序一致</li>\n<li>支付宝小程序，无</li>\n</ul>\n<hr>\n<h3 id=\"样式篇\"><a href=\"#样式篇\" class=\"headerlink\" title=\"样式篇\"></a>样式篇</h3><h4 id=\"兼容问题\"><a href=\"#兼容问题\" class=\"headerlink\" title=\"兼容问题\"></a>兼容问题</h4><p>如果只需要兼容<strong>小程序</strong>以及<strong>h5端</strong>，基本上所有css属性都能使用。</p>\n<p>如果要支持 <strong>React Native</strong> 端，必须采用 <strong>Flex</strong> 布局，并且样式选择器仅支持<strong>类选择器</strong>，且不支持 <strong>组合选择器</strong>。以下写法都是不支持的</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.button</span><span class=\"selector-class\">.button_theme_islands</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-style</span>: bold;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">img</span> + <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-style</span>: bold;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">p</span> ~ <span class=\"selector-tag\">span</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">div</span> &gt; <span class=\"selector-tag\">span</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: DodgerBlue;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">div</span> <span class=\"selector-tag\">span</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: DodgerBlue;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>React Native端支持的css属性较少，比如不支持<strong>background-image</strong>，只能使用<strong>Image</strong>组件，配合Flex布局来实现。<strong>box-shadow</strong>不支持，position只支持<strong>absolute</strong>和<strong>relative</strong>。 更多属性，见详细的<a href=\"https://reactnative.cn/docs/layout-props/\" target=\"_blank\" rel=\"noopener\">css属性列表</a>。</p>\n<h4 id=\"编译成React-Native\"><a href=\"#编译成React-Native\" class=\"headerlink\" title=\"编译成React-Native\"></a>编译成React-Native</h4><p>一个简单的按钮，css样式如下：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.back</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin-top</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.back_btn</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">    <span class=\"attribute\">line-height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: cadetblue;</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">70px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: aliceblue;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>编译之后</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; StyleSheet &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-native'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> StyleSheet.create(&#123;</span><br><span class=\"line\">  <span class=\"string\">\"back\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"width\"</span>: <span class=\"string\">\"100%\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"marginTop\"</span>: <span class=\"number\">250</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">\"back_btn\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"width\"</span>: <span class=\"number\">150</span>,</span><br><span class=\"line\">    <span class=\"string\">\"height\"</span>: <span class=\"number\">50</span>,</span><br><span class=\"line\">    <span class=\"string\">\"textAlign\"</span>: <span class=\"string\">\"center\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"lineHeight\"</span>: <span class=\"number\">50</span>,</span><br><span class=\"line\">    <span class=\"string\">\"fontSize\"</span>: <span class=\"number\">25</span>,</span><br><span class=\"line\">    <span class=\"string\">\"marginTop\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"string\">\"marginRight\"</span>: <span class=\"string\">\"auto\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"marginBottom\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"string\">\"marginLeft\"</span>: <span class=\"string\">\"auto\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"backgroundColor\"</span>: <span class=\"string\">\"cadetblue\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"borderRadius\"</span>: <span class=\"number\">35</span>,</span><br><span class=\"line\">    <span class=\"string\">\"color\"</span>: <span class=\"string\">\"aliceblue\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>React Native中，会使用StyleSheet.create来集中定义组件的样式。<a href=\"https://reactnative.cn/docs/style/\" target=\"_blank\" rel=\"noopener\">了解更多</a></p>\n<h4 id=\"CSS单位\"><a href=\"#CSS单位\" class=\"headerlink\" title=\"CSS单位\"></a>CSS单位</h4><p>以750px设计稿为基准，css样式以px为单位，如750px设计稿，一个按钮200*100。<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">width</span><span class=\"selector-pseudo\">:200px</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">height</span><span class=\"selector-pseudo\">:100px</span></span><br></pre></td></tr></table></figure></p>\n<p>设计稿尺寸可以在config文件中配置<strong>designWidth</strong>和<strong>deviceRatio</strong>字段。</p>\n<blockquote>\n<p>Taro会根据不同平台来编译px，小程序中px转换成rpx，h5中则转换成rem，react-native中转换成pt。如果不希望单位被转换，可以通过写成Px 或 PX来避免。</p>\n</blockquote>\n<h4 id=\"默认样式\"><a href=\"#默认样式\" class=\"headerlink\" title=\"默认样式\"></a>默认样式</h4><p>一些默认组件如<strong>button</strong>、<strong>image</strong>的默认样式在各个平台上不一致，开发前需要重置样式。</p>\n<h3 id=\"实际项目中遇到的问题\"><a href=\"#实际项目中遇到的问题\" class=\"headerlink\" title=\"实际项目中遇到的问题\"></a>实际项目中遇到的问题</h3><ul>\n<li><p>h5中使用第三方js<br>h5端可能会使用到三方js库，如果在小程序环境中，遇到window，document之类的变量，则会导致错误，解决方案是通过<strong>Taro.getEnv()</strong>判断环境后，按需引入三方库</p>\n</li>\n<li><p>audio问题<br>微信小程序中，音频会以<strong>createAudioContext</strong>来处理，相关音频的操作，也只能使用<strong>playVoice</strong>，<strong>pauseVoice</strong>等方法。这些方法在h5，react native及其他部分小程序中都是不支持的。因此只能通过不同的环境做不同的处理。</p>\n<p>以下是点击音乐图标后，控制音乐暂停/播放的方法</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">toggleMusic = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.setState(&#123;</span><br><span class=\"line\">    musicStatus: !<span class=\"keyword\">this</span>.state.musicStatus,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> audio;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (Taro.getEnv() === <span class=\"string\">'WEAPP'</span>) &#123;</span><br><span class=\"line\">      audio = Taro.createAudioContext(<span class=\"string\">'audio'</span>);</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.state.musicStatus ? Taro.pauseVoice() : Taro.playVoice();</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (Taro.getEnv() === <span class=\"string\">'WEB'</span>)&#123;</span><br><span class=\"line\">      audio = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'audio'</span>);</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.state.musicStatus ? audio.pause() : audio.play();</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      audio = ... <span class=\"comment\">//对应平台获取audio对象的方法</span></span><br><span class=\"line\">      <span class=\"keyword\">this</span>.state.musicStatus ? audio.pause() : audio.play();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"React-Native平台调试\"><a href=\"#React-Native平台调试\" class=\"headerlink\" title=\"React Native平台调试\"></a>React Native平台调试</h3><p><img src=\"https://qiniu.image.cq-wnl.com/content/20190228f9a18bfcb9784471ac1e862b71b6cde7.png\" alt=\"chrome\"></p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>总体来说，Taro的开发体验还是不错的。在编译不同平台的时候，可以通过配置config/index.js中的outputRoot，来达到同时编译多个平台的代码的效果。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> config = &#123;</span><br><span class=\"line\">  outputRoot: <span class=\"string\">`dist/<span class=\"subst\">$&#123;process.env.TARO_ENV&#125;</span>`</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>Taro对小程序端的兼容性基本一致，按照Taro规范的语法和组件来书写项目，基本能实现各端小程序以及h5端的统一开发。react native端由于环境特殊，存在许多特殊的api无法通用的情况，只能通过获取当前环境来做兼容处理。</p>\n","site":{"data":{"gallery":{"source":[{"link":"https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-4-18/61933480.jpg","desc":"涂鸦"},{"link":"https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-4-18/86403488.jpg","desc":"云南石林"}]}}},"excerpt":"<blockquote>\n<p>👽 Taro[‘tɑ:roʊ]，泰罗·奥特曼，宇宙警备队总教官，实力最强的奥特曼。多端统一开发框架，支持用 React 的开发方式编写一次代码，生成能运行在<strong>小程序端</strong>、<strong>H5</strong>、<strong>React Native</strong>等各平台的应用。</p>\n</blockquote>","more":"<h3 id=\"JSX篇\"><a href=\"#JSX篇\" class=\"headerlink\" title=\"JSX篇\"></a>JSX篇</h3><h4 id=\"jsx支持情况\"><a href=\"#jsx支持情况\" class=\"headerlink\" title=\"jsx支持情况\"></a>jsx支持情况</h4><ul>\n<li><p>不能使用 <strong>Array#map</strong> 之外的方法操作 JSX 数组</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> numbers = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>];</span><br><span class=\"line\">numbers.forEach(<span class=\"function\"><span class=\"params\">numbers</span> =&gt;</span> &#123; <span class=\"comment\">// Taro中这里必须用map</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (someCase) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>(</span><br><span class=\"line\">      &lt;View /&gt;</span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>不能在 JSX 参数中使用<strong>匿名函数</strong></p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;View onClick=&#123;() =&gt; &#123;<span class=\"keyword\">this</span>.openPic&#125;&#125;&gt;&lt;/View&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>暂不支持在 render() 之外的方法定义 JSX<br>假设现在页面中有一个音乐组件，不能这样使用</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> music = <span class=\"built_in\">require</span>(<span class=\"string\">'../assets/music.mp3'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> loop = <span class=\"literal\">true</span>;</span><br><span class=\"line\">musicComponent = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;Audio src=&#123;music&#125; loop=&#123;loop&#125; /&gt;</span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">render() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &#123;<span class=\"keyword\">this</span>.musicComponent()&#125;</span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>不能在 JSX 参数中使用对象展开符</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;View &#123;...this.props&#125; /&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>不支持无状态组件</p>\n<p>由于微信的 template 能力有限，不支持动态传值和函数，Taro 暂时只支持一个文件只定义一个组件。为了避免开发者疑惑，暂时不支持定义<strong>无状态组件</strong>。</p>\n</li>\n</ul>\n<h4 id=\"所有元素组件化\"><a href=\"#所有元素组件化\" class=\"headerlink\" title=\"所有元素组件化\"></a>所有元素组件化</h4><ul>\n<li><p>不能使用html标签，所有标签以<strong>组件</strong>形式书写。Taro实现了以微信小程序组件库为标准，结合jsx语法规范，定制了一套<a href=\"https://nervjs.github.io/taro/docs/components-desc.html\" target=\"_blank\" rel=\"noopener\">组件库</a>，在不同的端上，会使用不同端的对应组件。</p>\n</li>\n<li><p>组件名不能和页面名相同。</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"配置篇\"><a href=\"#配置篇\" class=\"headerlink\" title=\"配置篇\"></a>配置篇</h3><h4 id=\"项目配置\"><a href=\"#项目配置\" class=\"headerlink\" title=\"项目配置\"></a>项目配置</h4><p>项目初始后会默认自带微信小程序的配置文件<strong>project.config.js</strong>。<br>打包成其他平台小程序前，需要对应在根目录添加对应配置文件，否则运行报错。</p>\n<ul>\n<li>微信小程序，<a href=\"https://developers.weixin.qq.com/miniprogram/dev/devtools/projectconfig.html?search-key=%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE\" target=\"_blank\" rel=\"noopener\">project.config.json</a></li>\n<li>百度智能小程序，<a href=\"https://smartprogram.baidu.com/docs/develop/devtools/projectconfig/\" target=\"_blank\" rel=\"noopener\">project.swan.json</a></li>\n<li>头条小程序，project.tt.json，文档暂无，大部分字段与微信小程序一致</li>\n<li>支付宝小程序，无</li>\n</ul>\n<hr>\n<h3 id=\"样式篇\"><a href=\"#样式篇\" class=\"headerlink\" title=\"样式篇\"></a>样式篇</h3><h4 id=\"兼容问题\"><a href=\"#兼容问题\" class=\"headerlink\" title=\"兼容问题\"></a>兼容问题</h4><p>如果只需要兼容<strong>小程序</strong>以及<strong>h5端</strong>，基本上所有css属性都能使用。</p>\n<p>如果要支持 <strong>React Native</strong> 端，必须采用 <strong>Flex</strong> 布局，并且样式选择器仅支持<strong>类选择器</strong>，且不支持 <strong>组合选择器</strong>。以下写法都是不支持的</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.button</span><span class=\"selector-class\">.button_theme_islands</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-style</span>: bold;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">img</span> + <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-style</span>: bold;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">p</span> ~ <span class=\"selector-tag\">span</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">div</span> &gt; <span class=\"selector-tag\">span</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: DodgerBlue;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">div</span> <span class=\"selector-tag\">span</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: DodgerBlue;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>React Native端支持的css属性较少，比如不支持<strong>background-image</strong>，只能使用<strong>Image</strong>组件，配合Flex布局来实现。<strong>box-shadow</strong>不支持，position只支持<strong>absolute</strong>和<strong>relative</strong>。 更多属性，见详细的<a href=\"https://reactnative.cn/docs/layout-props/\" target=\"_blank\" rel=\"noopener\">css属性列表</a>。</p>\n<h4 id=\"编译成React-Native\"><a href=\"#编译成React-Native\" class=\"headerlink\" title=\"编译成React-Native\"></a>编译成React-Native</h4><p>一个简单的按钮，css样式如下：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.back</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin-top</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.back_btn</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">    <span class=\"attribute\">line-height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: cadetblue;</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">70px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: aliceblue;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>编译之后</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; StyleSheet &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-native'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> StyleSheet.create(&#123;</span><br><span class=\"line\">  <span class=\"string\">\"back\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"width\"</span>: <span class=\"string\">\"100%\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"marginTop\"</span>: <span class=\"number\">250</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">\"back_btn\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"width\"</span>: <span class=\"number\">150</span>,</span><br><span class=\"line\">    <span class=\"string\">\"height\"</span>: <span class=\"number\">50</span>,</span><br><span class=\"line\">    <span class=\"string\">\"textAlign\"</span>: <span class=\"string\">\"center\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"lineHeight\"</span>: <span class=\"number\">50</span>,</span><br><span class=\"line\">    <span class=\"string\">\"fontSize\"</span>: <span class=\"number\">25</span>,</span><br><span class=\"line\">    <span class=\"string\">\"marginTop\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"string\">\"marginRight\"</span>: <span class=\"string\">\"auto\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"marginBottom\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"string\">\"marginLeft\"</span>: <span class=\"string\">\"auto\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"backgroundColor\"</span>: <span class=\"string\">\"cadetblue\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"borderRadius\"</span>: <span class=\"number\">35</span>,</span><br><span class=\"line\">    <span class=\"string\">\"color\"</span>: <span class=\"string\">\"aliceblue\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>React Native中，会使用StyleSheet.create来集中定义组件的样式。<a href=\"https://reactnative.cn/docs/style/\" target=\"_blank\" rel=\"noopener\">了解更多</a></p>\n<h4 id=\"CSS单位\"><a href=\"#CSS单位\" class=\"headerlink\" title=\"CSS单位\"></a>CSS单位</h4><p>以750px设计稿为基准，css样式以px为单位，如750px设计稿，一个按钮200*100。<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">width</span><span class=\"selector-pseudo\">:200px</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">height</span><span class=\"selector-pseudo\">:100px</span></span><br></pre></td></tr></table></figure></p>\n<p>设计稿尺寸可以在config文件中配置<strong>designWidth</strong>和<strong>deviceRatio</strong>字段。</p>\n<blockquote>\n<p>Taro会根据不同平台来编译px，小程序中px转换成rpx，h5中则转换成rem，react-native中转换成pt。如果不希望单位被转换，可以通过写成Px 或 PX来避免。</p>\n</blockquote>\n<h4 id=\"默认样式\"><a href=\"#默认样式\" class=\"headerlink\" title=\"默认样式\"></a>默认样式</h4><p>一些默认组件如<strong>button</strong>、<strong>image</strong>的默认样式在各个平台上不一致，开发前需要重置样式。</p>\n<h3 id=\"实际项目中遇到的问题\"><a href=\"#实际项目中遇到的问题\" class=\"headerlink\" title=\"实际项目中遇到的问题\"></a>实际项目中遇到的问题</h3><ul>\n<li><p>h5中使用第三方js<br>h5端可能会使用到三方js库，如果在小程序环境中，遇到window，document之类的变量，则会导致错误，解决方案是通过<strong>Taro.getEnv()</strong>判断环境后，按需引入三方库</p>\n</li>\n<li><p>audio问题<br>微信小程序中，音频会以<strong>createAudioContext</strong>来处理，相关音频的操作，也只能使用<strong>playVoice</strong>，<strong>pauseVoice</strong>等方法。这些方法在h5，react native及其他部分小程序中都是不支持的。因此只能通过不同的环境做不同的处理。</p>\n<p>以下是点击音乐图标后，控制音乐暂停/播放的方法</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">toggleMusic = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.setState(&#123;</span><br><span class=\"line\">    musicStatus: !<span class=\"keyword\">this</span>.state.musicStatus,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> audio;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (Taro.getEnv() === <span class=\"string\">'WEAPP'</span>) &#123;</span><br><span class=\"line\">      audio = Taro.createAudioContext(<span class=\"string\">'audio'</span>);</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.state.musicStatus ? Taro.pauseVoice() : Taro.playVoice();</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (Taro.getEnv() === <span class=\"string\">'WEB'</span>)&#123;</span><br><span class=\"line\">      audio = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'audio'</span>);</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.state.musicStatus ? audio.pause() : audio.play();</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      audio = ... <span class=\"comment\">//对应平台获取audio对象的方法</span></span><br><span class=\"line\">      <span class=\"keyword\">this</span>.state.musicStatus ? audio.pause() : audio.play();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"React-Native平台调试\"><a href=\"#React-Native平台调试\" class=\"headerlink\" title=\"React Native平台调试\"></a>React Native平台调试</h3><p><img src=\"https://qiniu.image.cq-wnl.com/content/20190228f9a18bfcb9784471ac1e862b71b6cde7.png\" alt=\"chrome\"></p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>总体来说，Taro的开发体验还是不错的。在编译不同平台的时候，可以通过配置config/index.js中的outputRoot，来达到同时编译多个平台的代码的效果。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> config = &#123;</span><br><span class=\"line\">  outputRoot: <span class=\"string\">`dist/<span class=\"subst\">$&#123;process.env.TARO_ENV&#125;</span>`</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>Taro对小程序端的兼容性基本一致，按照Taro规范的语法和组件来书写项目，基本能实现各端小程序以及h5端的统一开发。react native端由于环境特殊，存在许多特殊的api无法通用的情况，只能通过获取当前环境来做兼容处理。</p>"},{"title":"试着不使用if语句？","date":"2018-04-17T17:09:19.000Z","_content":"\n你有尝试过不用if语句写代码吗？\n用if会存在什么问题吗？不会。相反，if语句能十分高效的判断条件是否满足。\n那这篇文章还有必要看吗？别急。还有一个概念，叫做**代码即数据**。\n\n<!-- more -->\n\n### 试着不使用if\n\n>**if**是我们平时编程最常用的语句之一。if语句的替代品还有**switch**语句、**三目运算**等语句。它们的实质都是判断条件为真时执行代码。那么当我们不使用这些语句去解决问题时的意义何在呢？\n\n如果写代码的时候不能使用if，我们就会去寻找其他的办法来解决，首先，这对于自己的思维转换有很大的提升，其次，当你用另外的方法解决之后，你又get到了新的技能。\n\n<!-- ### 不使用if应该怎么做 -->\n\n### 示例1：统计数组中偶数的数量\n>假设有一个数组，我们需要统计里面的偶数\n\n```javascript\nconst arr = [3, 5, 7, 2, 1, 8, 4, -6]\n```\n#### 使用if\n```javascript\nlet count = 0\narr.forEach((item) => {\n    if (Math.abs(item % 2) === 0) {\n        count += 1\n    }\n})\nconsole.log(count) // 4\n```\n#### 不使用if（方法一）\n```javascript\nlet newArr = arr.filter(item => Math.abs(item % 2) === 0 )\nconsole.log(newArr.length) // 4\n```\n>使用filter过滤满足条件的数据，返回新数组的长度即可。\n\n#### 不使用if（方法二）\n```javascript\nlet count = 0;\narr.forEach((item) => count += Math.abs(item % 2))\nconsole.log(arr.length - count) // 4\n```\n>利用了偶数算法的返回值始终为0或1，得到不是偶数的count，使用数组长度减去count即可。\n\n---------------------------------------------------------------------------------------------------------------------\n\n### 示例二：判断是否是夏季\n>指定一个月份（如：5），判断是否属于夏季（7，8，9月），是则返回'summer', 否则返回'other_season'\n\n#### 使用if\n```javascript\nconst summerOrOther = (month) => {\n    if (month <= 9 && month >= 7) return 'summer';\n    return 'other_season';\n}\nsummerOrOther(7); //summer\nsummerOrOther(10); //other_season\n```\n#### 不使用if\n```javascript\nconst condition = {\n    7: 'summer',\n    8: 'summer',\n    9: 'summer',\n    default: 'other_season'\n}\nconst summerOrOther = month => condition[month] || condition['default']\nsummerOrOther(9); //summer\nsummerOrOther(10); //other_season\n```\n>该方法并没有什么简单之处。但这样实现更能体现“代码即数据”的理念。一切操作都是对数据的处理，最后输出数据。\n\n---------------------------------------------------------------------------------------------------------------------\n\n### 总结\n>这两个简单示例只是说明if(switch, 三目运算符)语句可以用其他方式实现，仅供参考和学习。但if语句仍然是代码中高使用率的语句，建议根据实际需求来合理使用。\n","source":"_posts/not_if.md","raw":"---\ntitle: 试着不使用if语句？\ndate: 2018-04-17 17:09:19\ntags:\n    - JavaScript\n    - ES6\ncategories: JavaScript\n---\n\n你有尝试过不用if语句写代码吗？\n用if会存在什么问题吗？不会。相反，if语句能十分高效的判断条件是否满足。\n那这篇文章还有必要看吗？别急。还有一个概念，叫做**代码即数据**。\n\n<!-- more -->\n\n### 试着不使用if\n\n>**if**是我们平时编程最常用的语句之一。if语句的替代品还有**switch**语句、**三目运算**等语句。它们的实质都是判断条件为真时执行代码。那么当我们不使用这些语句去解决问题时的意义何在呢？\n\n如果写代码的时候不能使用if，我们就会去寻找其他的办法来解决，首先，这对于自己的思维转换有很大的提升，其次，当你用另外的方法解决之后，你又get到了新的技能。\n\n<!-- ### 不使用if应该怎么做 -->\n\n### 示例1：统计数组中偶数的数量\n>假设有一个数组，我们需要统计里面的偶数\n\n```javascript\nconst arr = [3, 5, 7, 2, 1, 8, 4, -6]\n```\n#### 使用if\n```javascript\nlet count = 0\narr.forEach((item) => {\n    if (Math.abs(item % 2) === 0) {\n        count += 1\n    }\n})\nconsole.log(count) // 4\n```\n#### 不使用if（方法一）\n```javascript\nlet newArr = arr.filter(item => Math.abs(item % 2) === 0 )\nconsole.log(newArr.length) // 4\n```\n>使用filter过滤满足条件的数据，返回新数组的长度即可。\n\n#### 不使用if（方法二）\n```javascript\nlet count = 0;\narr.forEach((item) => count += Math.abs(item % 2))\nconsole.log(arr.length - count) // 4\n```\n>利用了偶数算法的返回值始终为0或1，得到不是偶数的count，使用数组长度减去count即可。\n\n---------------------------------------------------------------------------------------------------------------------\n\n### 示例二：判断是否是夏季\n>指定一个月份（如：5），判断是否属于夏季（7，8，9月），是则返回'summer', 否则返回'other_season'\n\n#### 使用if\n```javascript\nconst summerOrOther = (month) => {\n    if (month <= 9 && month >= 7) return 'summer';\n    return 'other_season';\n}\nsummerOrOther(7); //summer\nsummerOrOther(10); //other_season\n```\n#### 不使用if\n```javascript\nconst condition = {\n    7: 'summer',\n    8: 'summer',\n    9: 'summer',\n    default: 'other_season'\n}\nconst summerOrOther = month => condition[month] || condition['default']\nsummerOrOther(9); //summer\nsummerOrOther(10); //other_season\n```\n>该方法并没有什么简单之处。但这样实现更能体现“代码即数据”的理念。一切操作都是对数据的处理，最后输出数据。\n\n---------------------------------------------------------------------------------------------------------------------\n\n### 总结\n>这两个简单示例只是说明if(switch, 三目运算符)语句可以用其他方式实现，仅供参考和学习。但if语句仍然是代码中高使用率的语句，建议根据实际需求来合理使用。\n","slug":"not_if","published":1,"updated":"2020-03-07T06:01:09.665Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck92alkmz000aaubv80qt7o80","content":"<p>你有尝试过不用if语句写代码吗？<br>用if会存在什么问题吗？不会。相反，if语句能十分高效的判断条件是否满足。<br>那这篇文章还有必要看吗？别急。还有一个概念，叫做<strong>代码即数据</strong>。</p>\n<a id=\"more\"></a>\n<h3 id=\"试着不使用if\"><a href=\"#试着不使用if\" class=\"headerlink\" title=\"试着不使用if\"></a>试着不使用if</h3><blockquote>\n<p><strong>if</strong>是我们平时编程最常用的语句之一。if语句的替代品还有<strong>switch</strong>语句、<strong>三目运算</strong>等语句。它们的实质都是判断条件为真时执行代码。那么当我们不使用这些语句去解决问题时的意义何在呢？</p>\n</blockquote>\n<p>如果写代码的时候不能使用if，我们就会去寻找其他的办法来解决，首先，这对于自己的思维转换有很大的提升，其次，当你用另外的方法解决之后，你又get到了新的技能。</p>\n<!-- ### 不使用if应该怎么做 -->\n<h3 id=\"示例1：统计数组中偶数的数量\"><a href=\"#示例1：统计数组中偶数的数量\" class=\"headerlink\" title=\"示例1：统计数组中偶数的数量\"></a>示例1：统计数组中偶数的数量</h3><blockquote>\n<p>假设有一个数组，我们需要统计里面的偶数</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">8</span>, <span class=\"number\">4</span>, <span class=\"number\">-6</span>]</span><br></pre></td></tr></table></figure>\n<h4 id=\"使用if\"><a href=\"#使用if\" class=\"headerlink\" title=\"使用if\"></a>使用if</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> count = <span class=\"number\">0</span></span><br><span class=\"line\">arr.forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">Math</span>.abs(item % <span class=\"number\">2</span>) === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        count += <span class=\"number\">1</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(count) <span class=\"comment\">// 4</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"不使用if（方法一）\"><a href=\"#不使用if（方法一）\" class=\"headerlink\" title=\"不使用if（方法一）\"></a>不使用if（方法一）</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> newArr = arr.filter(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> <span class=\"built_in\">Math</span>.abs(item % <span class=\"number\">2</span>) === <span class=\"number\">0</span> )</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newArr.length) <span class=\"comment\">// 4</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>使用filter过滤满足条件的数据，返回新数组的长度即可。</p>\n</blockquote>\n<h4 id=\"不使用if（方法二）\"><a href=\"#不使用if（方法二）\" class=\"headerlink\" title=\"不使用if（方法二）\"></a>不使用if（方法二）</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">arr.forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> count += <span class=\"built_in\">Math</span>.abs(item % <span class=\"number\">2</span>))</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr.length - count) <span class=\"comment\">// 4</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>利用了偶数算法的返回值始终为0或1，得到不是偶数的count，使用数组长度减去count即可。</p>\n</blockquote>\n<hr>\n<h3 id=\"示例二：判断是否是夏季\"><a href=\"#示例二：判断是否是夏季\" class=\"headerlink\" title=\"示例二：判断是否是夏季\"></a>示例二：判断是否是夏季</h3><blockquote>\n<p>指定一个月份（如：5），判断是否属于夏季（7，8，9月），是则返回’summer’, 否则返回’other_season’</p>\n</blockquote>\n<h4 id=\"使用if-1\"><a href=\"#使用if-1\" class=\"headerlink\" title=\"使用if\"></a>使用if</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> summerOrOther = <span class=\"function\">(<span class=\"params\">month</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (month &lt;= <span class=\"number\">9</span> &amp;&amp; month &gt;= <span class=\"number\">7</span>) <span class=\"keyword\">return</span> <span class=\"string\">'summer'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'other_season'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">summerOrOther(<span class=\"number\">7</span>); <span class=\"comment\">//summer</span></span><br><span class=\"line\">summerOrOther(<span class=\"number\">10</span>); <span class=\"comment\">//other_season</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"不使用if\"><a href=\"#不使用if\" class=\"headerlink\" title=\"不使用if\"></a>不使用if</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> condition = &#123;</span><br><span class=\"line\">    <span class=\"number\">7</span>: <span class=\"string\">'summer'</span>,</span><br><span class=\"line\">    <span class=\"number\">8</span>: <span class=\"string\">'summer'</span>,</span><br><span class=\"line\">    <span class=\"number\">9</span>: <span class=\"string\">'summer'</span>,</span><br><span class=\"line\">    <span class=\"keyword\">default</span>: <span class=\"string\">'other_season'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> summerOrOther = <span class=\"function\"><span class=\"params\">month</span> =&gt;</span> condition[month] || condition[<span class=\"string\">'default'</span>]</span><br><span class=\"line\">summerOrOther(<span class=\"number\">9</span>); <span class=\"comment\">//summer</span></span><br><span class=\"line\">summerOrOther(<span class=\"number\">10</span>); <span class=\"comment\">//other_season</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>该方法并没有什么简单之处。但这样实现更能体现“代码即数据”的理念。一切操作都是对数据的处理，最后输出数据。</p>\n</blockquote>\n<hr>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><blockquote>\n<p>这两个简单示例只是说明if(switch, 三目运算符)语句可以用其他方式实现，仅供参考和学习。但if语句仍然是代码中高使用率的语句，建议根据实际需求来合理使用。</p>\n</blockquote>\n","site":{"data":{"gallery":{"source":[{"link":"https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-4-18/61933480.jpg","desc":"涂鸦"},{"link":"https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-4-18/86403488.jpg","desc":"云南石林"}]}}},"excerpt":"<p>你有尝试过不用if语句写代码吗？<br>用if会存在什么问题吗？不会。相反，if语句能十分高效的判断条件是否满足。<br>那这篇文章还有必要看吗？别急。还有一个概念，叫做<strong>代码即数据</strong>。</p>","more":"<h3 id=\"试着不使用if\"><a href=\"#试着不使用if\" class=\"headerlink\" title=\"试着不使用if\"></a>试着不使用if</h3><blockquote>\n<p><strong>if</strong>是我们平时编程最常用的语句之一。if语句的替代品还有<strong>switch</strong>语句、<strong>三目运算</strong>等语句。它们的实质都是判断条件为真时执行代码。那么当我们不使用这些语句去解决问题时的意义何在呢？</p>\n</blockquote>\n<p>如果写代码的时候不能使用if，我们就会去寻找其他的办法来解决，首先，这对于自己的思维转换有很大的提升，其次，当你用另外的方法解决之后，你又get到了新的技能。</p>\n<!-- ### 不使用if应该怎么做 -->\n<h3 id=\"示例1：统计数组中偶数的数量\"><a href=\"#示例1：统计数组中偶数的数量\" class=\"headerlink\" title=\"示例1：统计数组中偶数的数量\"></a>示例1：统计数组中偶数的数量</h3><blockquote>\n<p>假设有一个数组，我们需要统计里面的偶数</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">8</span>, <span class=\"number\">4</span>, <span class=\"number\">-6</span>]</span><br></pre></td></tr></table></figure>\n<h4 id=\"使用if\"><a href=\"#使用if\" class=\"headerlink\" title=\"使用if\"></a>使用if</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> count = <span class=\"number\">0</span></span><br><span class=\"line\">arr.forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">Math</span>.abs(item % <span class=\"number\">2</span>) === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        count += <span class=\"number\">1</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(count) <span class=\"comment\">// 4</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"不使用if（方法一）\"><a href=\"#不使用if（方法一）\" class=\"headerlink\" title=\"不使用if（方法一）\"></a>不使用if（方法一）</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> newArr = arr.filter(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> <span class=\"built_in\">Math</span>.abs(item % <span class=\"number\">2</span>) === <span class=\"number\">0</span> )</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newArr.length) <span class=\"comment\">// 4</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>使用filter过滤满足条件的数据，返回新数组的长度即可。</p>\n</blockquote>\n<h4 id=\"不使用if（方法二）\"><a href=\"#不使用if（方法二）\" class=\"headerlink\" title=\"不使用if（方法二）\"></a>不使用if（方法二）</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">arr.forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> count += <span class=\"built_in\">Math</span>.abs(item % <span class=\"number\">2</span>))</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr.length - count) <span class=\"comment\">// 4</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>利用了偶数算法的返回值始终为0或1，得到不是偶数的count，使用数组长度减去count即可。</p>\n</blockquote>\n<hr>\n<h3 id=\"示例二：判断是否是夏季\"><a href=\"#示例二：判断是否是夏季\" class=\"headerlink\" title=\"示例二：判断是否是夏季\"></a>示例二：判断是否是夏季</h3><blockquote>\n<p>指定一个月份（如：5），判断是否属于夏季（7，8，9月），是则返回’summer’, 否则返回’other_season’</p>\n</blockquote>\n<h4 id=\"使用if-1\"><a href=\"#使用if-1\" class=\"headerlink\" title=\"使用if\"></a>使用if</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> summerOrOther = <span class=\"function\">(<span class=\"params\">month</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (month &lt;= <span class=\"number\">9</span> &amp;&amp; month &gt;= <span class=\"number\">7</span>) <span class=\"keyword\">return</span> <span class=\"string\">'summer'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'other_season'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">summerOrOther(<span class=\"number\">7</span>); <span class=\"comment\">//summer</span></span><br><span class=\"line\">summerOrOther(<span class=\"number\">10</span>); <span class=\"comment\">//other_season</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"不使用if\"><a href=\"#不使用if\" class=\"headerlink\" title=\"不使用if\"></a>不使用if</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> condition = &#123;</span><br><span class=\"line\">    <span class=\"number\">7</span>: <span class=\"string\">'summer'</span>,</span><br><span class=\"line\">    <span class=\"number\">8</span>: <span class=\"string\">'summer'</span>,</span><br><span class=\"line\">    <span class=\"number\">9</span>: <span class=\"string\">'summer'</span>,</span><br><span class=\"line\">    <span class=\"keyword\">default</span>: <span class=\"string\">'other_season'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> summerOrOther = <span class=\"function\"><span class=\"params\">month</span> =&gt;</span> condition[month] || condition[<span class=\"string\">'default'</span>]</span><br><span class=\"line\">summerOrOther(<span class=\"number\">9</span>); <span class=\"comment\">//summer</span></span><br><span class=\"line\">summerOrOther(<span class=\"number\">10</span>); <span class=\"comment\">//other_season</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>该方法并没有什么简单之处。但这样实现更能体现“代码即数据”的理念。一切操作都是对数据的处理，最后输出数据。</p>\n</blockquote>\n<hr>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><blockquote>\n<p>这两个简单示例只是说明if(switch, 三目运算符)语句可以用其他方式实现，仅供参考和学习。但if语句仍然是代码中高使用率的语句，建议根据实际需求来合理使用。</p>\n</blockquote>"},{"title":"写一个简单的vue双向数据绑定","date":"2018-07-24T11:19:30.000Z","_content":"\n>vue双向数据绑定原理：**监听器**、**解析器**、**视图更新**。\n\n### MVVM双向数据绑定流程\n\n![MVVM双向数据绑定流程](https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-7-24/64201803.jpg)\n\n<!-- more -->\n\n### html\n\n```html\n <div id=\"app\">\n    <form>\n        <button type=\"button\" v-click=\"decrease\"> - </button>\n        <input type=\"text\" v-model=\"number\">\n        <button type=\"button\" v-click=\"increment\"> + </button>\n    </form>\n    <h3 v-bind=\"number\"></h3>\n</div>\n```\n![html](https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-7-24/92465283.jpg)\n\n### 初始化mvvm\n\n```javascript\nfunction MyVue(options) {\n  this._init(options);\n}\n// 初始化, 继承所有options\nMyVue.prototype._init = (options) => {\n  console.log(options);\n  this.$options = options;\n  this.$el = document.querySelector(options.el);\n  this.$data = options.data;\n  this.$methods = options.methods;\n\n  this._binding = {}; // _binding保存着model与view的映射关系，也就是Watcher的实例。当model改变时，会触发其中的指令类更新，保证view也能实时更新\n\n  // 监听器\n  this._observe(this.$data);\n  // 解析器\n  this._compile(this.$el);\n};\n```\n\n### 实现Observe\n\n> Observer 遍历数据对象。\n> 如果对某个数据赋值，会触发setter，就能监听数据变化\n> 如果获取某个数据，会触发getter\n\n```javascript\nMyVue.prototype._observe = (data) => {\n  console.log(this);\n  let value;\n  for (let key in data) {\n    if (data.hasOwnProperty(key)) {\n      this._binding[key] = {\n          _directives: []\n      }\n      value = data[key];\n      if (typeof value === \"object\") {\n        this._observe(value);\n      }\n      let binding = this._binding[key];\n      Object.defineProperty(data, key, {\n        enumerable: true, // 可枚举\n        configurable: true, // 是否可以再定义\n        get: () => {\n          console.log(`获取${value}`);\n          return value;\n        },\n        set: newValue => {\n          console.log(`更新${newValue}`);\n          if (value !== newValue) {\n            value = newValue;\n            binding._directives.forEach(item => {\n                item.update();\n            });\n          }\n        }\n      });\n    }\n  }\n};\n```\n\n### 实现compile\n> compile方法主要做以下事情：\n> 1. 解析模板指令\n> 2. 将模板中的变量替换成数据\n> 3. 初始化渲染视图并且给每个指令对应的dom绑定update函数\n> 4. 数据变化，通知视图更新\n\n```javascript\n// root为根元素\nMyVue.prototype._compile = (root) => {\n let _this = this;\n let nodes = root.children;\n for (let i = 0; i < nodes.length; ++i) {\n     let node = nodes[i];\n     if (node.children.length) {\n        _this._compile(node);\n     }\n     //解析模板指令&将模板中的变量替换成数据\n     if (node.hasAttribute('v-click')) {\n        node.onclick = (function() {\n            let attrVal = node.getAttribute('v-click');\n            console.log(attrVal);\n            return _this.$methods[attrVal].bind(_this.$data);\n        })();\n     }\n     // 绑定数据模型\n     if (node.hasAttribute('v-model') && (node.tagName === 'INPUT' || node.tagName === 'TEXTAREA')) {\n         node.addEventListener('input', ((key) => {\n            let attrVal = node.getAttribute('v-model');\n            _this._binding[attrVal]._directives.push(new Watcher(\n                'input',\n                node,\n                _this,\n                attrVal,\n                'value'\n            ))\n            return function() {\n                _this.$data[attrVal] = nodes[key].value;\n            }\n        })(i));\n     }\n     if (node.hasAttribute('v-bind')) {\n         let attrVal = node.getAttribute('v-bind');\n         _this._binding[attrVal]._directives.push(new Watcher(\n            'text',\n            node,\n            _this,\n            attrVal,\n            'innerHTML'\n         ))\n     }\n }\n}\n```\n\n### 实现Watcher\n> 每次数据发生变化 都会触发Watcher去更新视图\n\n```javascript\n/**\n * 实现Watcher监听\n * \n * @param {String} name 指令名称\n * @param {Element} el 指令对应的dom元素\n * @param {Instance} vm 指令所属的myVue实例\n * @param {any} exp 指令对应的值\n * @param {any} attr 绑定的属性值\n */\nfunction Watcher(name, el, vm, exp, attr) {\n    this.name = name;\n    this.el = el;\n    this.vm = vm;\n    this.exp = exp;\n    this.attr = attr;\n\n    this.update();\n}\n\n\nWatcher.prototype.update = () => {\n    this.el[this.attr] = this.vm.$data[this.exp]; // 当data对应的值(exp)改变时，修改当前元素的属性，以保证dom更新\n}\n```\n\n### 调用MyVue\n```javascript\n// 调用 MyVue\nwindow.onload = () => {\n  let app = new MyVue({\n    el: \"#app\",\n    data: {\n      number: 0\n    },\n    methods: {\n      increment: () => {\n          this.number++;\n      },\n      decrease: () => {\n          this.number--;\n      }\n    }\n  });\n};\n```\n\n### 最终效果\n![最终效果](https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-7-24/47264916.jpg)\n\n### 总结\n1. vue数据双向绑定是通过数据劫持结合发布者-订阅者模式的方式来实现的。\n2. Vue2.x版本双向数据绑定的核心是**Object.defineProperty**方法，劫持对象的访问器，在属性值发生变化时我们可以获取变化,从而进行进一步操作。\n3. 通过监听器和解析器的协作，触发Watcher更新视图\n\n\n> 在即将到来的Vue3.x中，将会使用ES6的[Proxy](http://es6.ruanyifeng.com/#docs/proxy)代替，它可以直接劫持整个对象，并返回一个新对象，不管是操作便利程度还是底层功能上都远强于Object.defineProperty。","source":"_posts/vue_data_binding.md","raw":"---\ntitle: 写一个简单的vue双向数据绑定\ndate: 2018-07-24 11:19:30\ntags: \n  - JavaScript\n  - Vue\ncategories: Vue\n---\n\n>vue双向数据绑定原理：**监听器**、**解析器**、**视图更新**。\n\n### MVVM双向数据绑定流程\n\n![MVVM双向数据绑定流程](https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-7-24/64201803.jpg)\n\n<!-- more -->\n\n### html\n\n```html\n <div id=\"app\">\n    <form>\n        <button type=\"button\" v-click=\"decrease\"> - </button>\n        <input type=\"text\" v-model=\"number\">\n        <button type=\"button\" v-click=\"increment\"> + </button>\n    </form>\n    <h3 v-bind=\"number\"></h3>\n</div>\n```\n![html](https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-7-24/92465283.jpg)\n\n### 初始化mvvm\n\n```javascript\nfunction MyVue(options) {\n  this._init(options);\n}\n// 初始化, 继承所有options\nMyVue.prototype._init = (options) => {\n  console.log(options);\n  this.$options = options;\n  this.$el = document.querySelector(options.el);\n  this.$data = options.data;\n  this.$methods = options.methods;\n\n  this._binding = {}; // _binding保存着model与view的映射关系，也就是Watcher的实例。当model改变时，会触发其中的指令类更新，保证view也能实时更新\n\n  // 监听器\n  this._observe(this.$data);\n  // 解析器\n  this._compile(this.$el);\n};\n```\n\n### 实现Observe\n\n> Observer 遍历数据对象。\n> 如果对某个数据赋值，会触发setter，就能监听数据变化\n> 如果获取某个数据，会触发getter\n\n```javascript\nMyVue.prototype._observe = (data) => {\n  console.log(this);\n  let value;\n  for (let key in data) {\n    if (data.hasOwnProperty(key)) {\n      this._binding[key] = {\n          _directives: []\n      }\n      value = data[key];\n      if (typeof value === \"object\") {\n        this._observe(value);\n      }\n      let binding = this._binding[key];\n      Object.defineProperty(data, key, {\n        enumerable: true, // 可枚举\n        configurable: true, // 是否可以再定义\n        get: () => {\n          console.log(`获取${value}`);\n          return value;\n        },\n        set: newValue => {\n          console.log(`更新${newValue}`);\n          if (value !== newValue) {\n            value = newValue;\n            binding._directives.forEach(item => {\n                item.update();\n            });\n          }\n        }\n      });\n    }\n  }\n};\n```\n\n### 实现compile\n> compile方法主要做以下事情：\n> 1. 解析模板指令\n> 2. 将模板中的变量替换成数据\n> 3. 初始化渲染视图并且给每个指令对应的dom绑定update函数\n> 4. 数据变化，通知视图更新\n\n```javascript\n// root为根元素\nMyVue.prototype._compile = (root) => {\n let _this = this;\n let nodes = root.children;\n for (let i = 0; i < nodes.length; ++i) {\n     let node = nodes[i];\n     if (node.children.length) {\n        _this._compile(node);\n     }\n     //解析模板指令&将模板中的变量替换成数据\n     if (node.hasAttribute('v-click')) {\n        node.onclick = (function() {\n            let attrVal = node.getAttribute('v-click');\n            console.log(attrVal);\n            return _this.$methods[attrVal].bind(_this.$data);\n        })();\n     }\n     // 绑定数据模型\n     if (node.hasAttribute('v-model') && (node.tagName === 'INPUT' || node.tagName === 'TEXTAREA')) {\n         node.addEventListener('input', ((key) => {\n            let attrVal = node.getAttribute('v-model');\n            _this._binding[attrVal]._directives.push(new Watcher(\n                'input',\n                node,\n                _this,\n                attrVal,\n                'value'\n            ))\n            return function() {\n                _this.$data[attrVal] = nodes[key].value;\n            }\n        })(i));\n     }\n     if (node.hasAttribute('v-bind')) {\n         let attrVal = node.getAttribute('v-bind');\n         _this._binding[attrVal]._directives.push(new Watcher(\n            'text',\n            node,\n            _this,\n            attrVal,\n            'innerHTML'\n         ))\n     }\n }\n}\n```\n\n### 实现Watcher\n> 每次数据发生变化 都会触发Watcher去更新视图\n\n```javascript\n/**\n * 实现Watcher监听\n * \n * @param {String} name 指令名称\n * @param {Element} el 指令对应的dom元素\n * @param {Instance} vm 指令所属的myVue实例\n * @param {any} exp 指令对应的值\n * @param {any} attr 绑定的属性值\n */\nfunction Watcher(name, el, vm, exp, attr) {\n    this.name = name;\n    this.el = el;\n    this.vm = vm;\n    this.exp = exp;\n    this.attr = attr;\n\n    this.update();\n}\n\n\nWatcher.prototype.update = () => {\n    this.el[this.attr] = this.vm.$data[this.exp]; // 当data对应的值(exp)改变时，修改当前元素的属性，以保证dom更新\n}\n```\n\n### 调用MyVue\n```javascript\n// 调用 MyVue\nwindow.onload = () => {\n  let app = new MyVue({\n    el: \"#app\",\n    data: {\n      number: 0\n    },\n    methods: {\n      increment: () => {\n          this.number++;\n      },\n      decrease: () => {\n          this.number--;\n      }\n    }\n  });\n};\n```\n\n### 最终效果\n![最终效果](https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-7-24/47264916.jpg)\n\n### 总结\n1. vue数据双向绑定是通过数据劫持结合发布者-订阅者模式的方式来实现的。\n2. Vue2.x版本双向数据绑定的核心是**Object.defineProperty**方法，劫持对象的访问器，在属性值发生变化时我们可以获取变化,从而进行进一步操作。\n3. 通过监听器和解析器的协作，触发Watcher更新视图\n\n\n> 在即将到来的Vue3.x中，将会使用ES6的[Proxy](http://es6.ruanyifeng.com/#docs/proxy)代替，它可以直接劫持整个对象，并返回一个新对象，不管是操作便利程度还是底层功能上都远强于Object.defineProperty。","slug":"vue_data_binding","published":1,"updated":"2020-03-07T06:01:09.665Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck92alkn3000eaubv4jq8acyb","content":"<blockquote>\n<p>vue双向数据绑定原理：<strong>监听器</strong>、<strong>解析器</strong>、<strong>视图更新</strong>。</p>\n</blockquote>\n<h3 id=\"MVVM双向数据绑定流程\"><a href=\"#MVVM双向数据绑定流程\" class=\"headerlink\" title=\"MVVM双向数据绑定流程\"></a>MVVM双向数据绑定流程</h3><p><img src=\"https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-7-24/64201803.jpg\" alt=\"MVVM双向数据绑定流程\"></p>\n<a id=\"more\"></a>\n<h3 id=\"html\"><a href=\"#html\" class=\"headerlink\" title=\"html\"></a>html</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">v-click</span>=<span class=\"string\">\"decrease\"</span>&gt;</span> - <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"number\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">v-click</span>=<span class=\"string\">\"increment\"</span>&gt;</span> + <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span> <span class=\"attr\">v-bind</span>=<span class=\"string\">\"number\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-7-24/92465283.jpg\" alt=\"html\"></p>\n<h3 id=\"初始化mvvm\"><a href=\"#初始化mvvm\" class=\"headerlink\" title=\"初始化mvvm\"></a>初始化mvvm</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">MyVue</span>(<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>._init(options);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 初始化, 继承所有options</span></span><br><span class=\"line\">MyVue.prototype._init = <span class=\"function\">(<span class=\"params\">options</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(options);</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.$options = options;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.$el = <span class=\"built_in\">document</span>.querySelector(options.el);</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.$data = options.data;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.$methods = options.methods;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">this</span>._binding = &#123;&#125;; <span class=\"comment\">// _binding保存着model与view的映射关系，也就是Watcher的实例。当model改变时，会触发其中的指令类更新，保证view也能实时更新</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 监听器</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>._observe(<span class=\"keyword\">this</span>.$data);</span><br><span class=\"line\">  <span class=\"comment\">// 解析器</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>._compile(<span class=\"keyword\">this</span>.$el);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"实现Observe\"><a href=\"#实现Observe\" class=\"headerlink\" title=\"实现Observe\"></a>实现Observe</h3><blockquote>\n<p>Observer 遍历数据对象。<br>如果对某个数据赋值，会触发setter，就能监听数据变化<br>如果获取某个数据，会触发getter</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MyVue.prototype._observe = <span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> value;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> data) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (data.hasOwnProperty(key)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>._binding[key] = &#123;</span><br><span class=\"line\">          _directives: []</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      value = data[key];</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> value === <span class=\"string\">\"object\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>._observe(value);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> binding = <span class=\"keyword\">this</span>._binding[key];</span><br><span class=\"line\">      <span class=\"built_in\">Object</span>.defineProperty(data, key, &#123;</span><br><span class=\"line\">        enumerable: <span class=\"literal\">true</span>, <span class=\"comment\">// 可枚举</span></span><br><span class=\"line\">        configurable: <span class=\"literal\">true</span>, <span class=\"comment\">// 是否可以再定义</span></span><br><span class=\"line\">        get: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"built_in\">console</span>.log(<span class=\"string\">`获取<span class=\"subst\">$&#123;value&#125;</span>`</span>);</span><br><span class=\"line\">          <span class=\"keyword\">return</span> value;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        set: <span class=\"function\"><span class=\"params\">newValue</span> =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"built_in\">console</span>.log(<span class=\"string\">`更新<span class=\"subst\">$&#123;newValue&#125;</span>`</span>);</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (value !== newValue) &#123;</span><br><span class=\"line\">            value = newValue;</span><br><span class=\"line\">            binding._directives.forEach(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">                item.update();</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"实现compile\"><a href=\"#实现compile\" class=\"headerlink\" title=\"实现compile\"></a>实现compile</h3><blockquote>\n<p>compile方法主要做以下事情：</p>\n<ol>\n<li>解析模板指令</li>\n<li>将模板中的变量替换成数据</li>\n<li>初始化渲染视图并且给每个指令对应的dom绑定update函数</li>\n<li>数据变化，通知视图更新</li>\n</ol>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// root为根元素</span></span><br><span class=\"line\">MyVue.prototype._compile = <span class=\"function\">(<span class=\"params\">root</span>) =&gt;</span> &#123;</span><br><span class=\"line\"> <span class=\"keyword\">let</span> _this = <span class=\"keyword\">this</span>;</span><br><span class=\"line\"> <span class=\"keyword\">let</span> nodes = root.children;</span><br><span class=\"line\"> <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; nodes.length; ++i) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">let</span> node = nodes[i];</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (node.children.length) &#123;</span><br><span class=\"line\">        _this._compile(node);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"comment\">//解析模板指令&amp;将模板中的变量替换成数据</span></span><br><span class=\"line\">     <span class=\"keyword\">if</span> (node.hasAttribute(<span class=\"string\">'v-click'</span>)) &#123;</span><br><span class=\"line\">        node.onclick = (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> attrVal = node.getAttribute(<span class=\"string\">'v-click'</span>);</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(attrVal);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> _this.$methods[attrVal].bind(_this.$data);</span><br><span class=\"line\">        &#125;)();</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"comment\">// 绑定数据模型</span></span><br><span class=\"line\">     <span class=\"keyword\">if</span> (node.hasAttribute(<span class=\"string\">'v-model'</span>) &amp;&amp; (node.tagName === <span class=\"string\">'INPUT'</span> || node.tagName === <span class=\"string\">'TEXTAREA'</span>)) &#123;</span><br><span class=\"line\">         node.addEventListener(<span class=\"string\">'input'</span>, (<span class=\"function\">(<span class=\"params\">key</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> attrVal = node.getAttribute(<span class=\"string\">'v-model'</span>);</span><br><span class=\"line\">            _this._binding[attrVal]._directives.push(<span class=\"keyword\">new</span> Watcher(</span><br><span class=\"line\">                <span class=\"string\">'input'</span>,</span><br><span class=\"line\">                node,</span><br><span class=\"line\">                _this,</span><br><span class=\"line\">                attrVal,</span><br><span class=\"line\">                <span class=\"string\">'value'</span></span><br><span class=\"line\">            ))</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">                _this.$data[attrVal] = nodes[key].value;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)(i));</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (node.hasAttribute(<span class=\"string\">'v-bind'</span>)) &#123;</span><br><span class=\"line\">         <span class=\"keyword\">let</span> attrVal = node.getAttribute(<span class=\"string\">'v-bind'</span>);</span><br><span class=\"line\">         _this._binding[attrVal]._directives.push(<span class=\"keyword\">new</span> Watcher(</span><br><span class=\"line\">            <span class=\"string\">'text'</span>,</span><br><span class=\"line\">            node,</span><br><span class=\"line\">            _this,</span><br><span class=\"line\">            attrVal,</span><br><span class=\"line\">            <span class=\"string\">'innerHTML'</span></span><br><span class=\"line\">         ))</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"实现Watcher\"><a href=\"#实现Watcher\" class=\"headerlink\" title=\"实现Watcher\"></a>实现Watcher</h3><blockquote>\n<p>每次数据发生变化 都会触发Watcher去更新视图</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 实现Watcher监听</span></span><br><span class=\"line\"><span class=\"comment\"> * </span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;String&#125; name 指令名称</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;Element&#125; el 指令对应的dom元素</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;Instance&#125; vm 指令所属的myVue实例</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;any&#125; exp 指令对应的值</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;any&#125; attr 绑定的属性值</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Watcher</span>(<span class=\"params\">name, el, vm, exp, attr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.el = el;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.vm = vm;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.exp = exp;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.attr = attr;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.update();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Watcher.prototype.update = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.el[<span class=\"keyword\">this</span>.attr] = <span class=\"keyword\">this</span>.vm.$data[<span class=\"keyword\">this</span>.exp]; <span class=\"comment\">// 当data对应的值(exp)改变时，修改当前元素的属性，以保证dom更新</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"调用MyVue\"><a href=\"#调用MyVue\" class=\"headerlink\" title=\"调用MyVue\"></a>调用MyVue</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 调用 MyVue</span></span><br><span class=\"line\"><span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> app = <span class=\"keyword\">new</span> MyVue(&#123;</span><br><span class=\"line\">    el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">      number: <span class=\"number\">0</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\">      increment: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.number++;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      decrease: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.number--;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"最终效果\"><a href=\"#最终效果\" class=\"headerlink\" title=\"最终效果\"></a>最终效果</h3><p><img src=\"https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-7-24/47264916.jpg\" alt=\"最终效果\"></p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ol>\n<li>vue数据双向绑定是通过数据劫持结合发布者-订阅者模式的方式来实现的。</li>\n<li>Vue2.x版本双向数据绑定的核心是<strong>Object.defineProperty</strong>方法，劫持对象的访问器，在属性值发生变化时我们可以获取变化,从而进行进一步操作。</li>\n<li>通过监听器和解析器的协作，触发Watcher更新视图</li>\n</ol>\n<blockquote>\n<p>在即将到来的Vue3.x中，将会使用ES6的<a href=\"http://es6.ruanyifeng.com/#docs/proxy\" target=\"_blank\" rel=\"noopener\">Proxy</a>代替，它可以直接劫持整个对象，并返回一个新对象，不管是操作便利程度还是底层功能上都远强于Object.defineProperty。</p>\n</blockquote>\n","site":{"data":{"gallery":{"source":[{"link":"https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-4-18/61933480.jpg","desc":"涂鸦"},{"link":"https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-4-18/86403488.jpg","desc":"云南石林"}]}}},"excerpt":"<blockquote>\n<p>vue双向数据绑定原理：<strong>监听器</strong>、<strong>解析器</strong>、<strong>视图更新</strong>。</p>\n</blockquote>\n<h3 id=\"MVVM双向数据绑定流程\"><a href=\"#MVVM双向数据绑定流程\" class=\"headerlink\" title=\"MVVM双向数据绑定流程\"></a>MVVM双向数据绑定流程</h3><p><img src=\"https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-7-24/64201803.jpg\" alt=\"MVVM双向数据绑定流程\"></p>","more":"<h3 id=\"html\"><a href=\"#html\" class=\"headerlink\" title=\"html\"></a>html</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">v-click</span>=<span class=\"string\">\"decrease\"</span>&gt;</span> - <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"number\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">v-click</span>=<span class=\"string\">\"increment\"</span>&gt;</span> + <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span> <span class=\"attr\">v-bind</span>=<span class=\"string\">\"number\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-7-24/92465283.jpg\" alt=\"html\"></p>\n<h3 id=\"初始化mvvm\"><a href=\"#初始化mvvm\" class=\"headerlink\" title=\"初始化mvvm\"></a>初始化mvvm</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">MyVue</span>(<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>._init(options);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 初始化, 继承所有options</span></span><br><span class=\"line\">MyVue.prototype._init = <span class=\"function\">(<span class=\"params\">options</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(options);</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.$options = options;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.$el = <span class=\"built_in\">document</span>.querySelector(options.el);</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.$data = options.data;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.$methods = options.methods;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">this</span>._binding = &#123;&#125;; <span class=\"comment\">// _binding保存着model与view的映射关系，也就是Watcher的实例。当model改变时，会触发其中的指令类更新，保证view也能实时更新</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 监听器</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>._observe(<span class=\"keyword\">this</span>.$data);</span><br><span class=\"line\">  <span class=\"comment\">// 解析器</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>._compile(<span class=\"keyword\">this</span>.$el);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"实现Observe\"><a href=\"#实现Observe\" class=\"headerlink\" title=\"实现Observe\"></a>实现Observe</h3><blockquote>\n<p>Observer 遍历数据对象。<br>如果对某个数据赋值，会触发setter，就能监听数据变化<br>如果获取某个数据，会触发getter</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MyVue.prototype._observe = <span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> value;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> data) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (data.hasOwnProperty(key)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>._binding[key] = &#123;</span><br><span class=\"line\">          _directives: []</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      value = data[key];</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> value === <span class=\"string\">\"object\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>._observe(value);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> binding = <span class=\"keyword\">this</span>._binding[key];</span><br><span class=\"line\">      <span class=\"built_in\">Object</span>.defineProperty(data, key, &#123;</span><br><span class=\"line\">        enumerable: <span class=\"literal\">true</span>, <span class=\"comment\">// 可枚举</span></span><br><span class=\"line\">        configurable: <span class=\"literal\">true</span>, <span class=\"comment\">// 是否可以再定义</span></span><br><span class=\"line\">        get: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"built_in\">console</span>.log(<span class=\"string\">`获取<span class=\"subst\">$&#123;value&#125;</span>`</span>);</span><br><span class=\"line\">          <span class=\"keyword\">return</span> value;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        set: <span class=\"function\"><span class=\"params\">newValue</span> =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"built_in\">console</span>.log(<span class=\"string\">`更新<span class=\"subst\">$&#123;newValue&#125;</span>`</span>);</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (value !== newValue) &#123;</span><br><span class=\"line\">            value = newValue;</span><br><span class=\"line\">            binding._directives.forEach(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">                item.update();</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"实现compile\"><a href=\"#实现compile\" class=\"headerlink\" title=\"实现compile\"></a>实现compile</h3><blockquote>\n<p>compile方法主要做以下事情：</p>\n<ol>\n<li>解析模板指令</li>\n<li>将模板中的变量替换成数据</li>\n<li>初始化渲染视图并且给每个指令对应的dom绑定update函数</li>\n<li>数据变化，通知视图更新</li>\n</ol>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// root为根元素</span></span><br><span class=\"line\">MyVue.prototype._compile = <span class=\"function\">(<span class=\"params\">root</span>) =&gt;</span> &#123;</span><br><span class=\"line\"> <span class=\"keyword\">let</span> _this = <span class=\"keyword\">this</span>;</span><br><span class=\"line\"> <span class=\"keyword\">let</span> nodes = root.children;</span><br><span class=\"line\"> <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; nodes.length; ++i) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">let</span> node = nodes[i];</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (node.children.length) &#123;</span><br><span class=\"line\">        _this._compile(node);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"comment\">//解析模板指令&amp;将模板中的变量替换成数据</span></span><br><span class=\"line\">     <span class=\"keyword\">if</span> (node.hasAttribute(<span class=\"string\">'v-click'</span>)) &#123;</span><br><span class=\"line\">        node.onclick = (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> attrVal = node.getAttribute(<span class=\"string\">'v-click'</span>);</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(attrVal);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> _this.$methods[attrVal].bind(_this.$data);</span><br><span class=\"line\">        &#125;)();</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"comment\">// 绑定数据模型</span></span><br><span class=\"line\">     <span class=\"keyword\">if</span> (node.hasAttribute(<span class=\"string\">'v-model'</span>) &amp;&amp; (node.tagName === <span class=\"string\">'INPUT'</span> || node.tagName === <span class=\"string\">'TEXTAREA'</span>)) &#123;</span><br><span class=\"line\">         node.addEventListener(<span class=\"string\">'input'</span>, (<span class=\"function\">(<span class=\"params\">key</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> attrVal = node.getAttribute(<span class=\"string\">'v-model'</span>);</span><br><span class=\"line\">            _this._binding[attrVal]._directives.push(<span class=\"keyword\">new</span> Watcher(</span><br><span class=\"line\">                <span class=\"string\">'input'</span>,</span><br><span class=\"line\">                node,</span><br><span class=\"line\">                _this,</span><br><span class=\"line\">                attrVal,</span><br><span class=\"line\">                <span class=\"string\">'value'</span></span><br><span class=\"line\">            ))</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">                _this.$data[attrVal] = nodes[key].value;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)(i));</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (node.hasAttribute(<span class=\"string\">'v-bind'</span>)) &#123;</span><br><span class=\"line\">         <span class=\"keyword\">let</span> attrVal = node.getAttribute(<span class=\"string\">'v-bind'</span>);</span><br><span class=\"line\">         _this._binding[attrVal]._directives.push(<span class=\"keyword\">new</span> Watcher(</span><br><span class=\"line\">            <span class=\"string\">'text'</span>,</span><br><span class=\"line\">            node,</span><br><span class=\"line\">            _this,</span><br><span class=\"line\">            attrVal,</span><br><span class=\"line\">            <span class=\"string\">'innerHTML'</span></span><br><span class=\"line\">         ))</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"实现Watcher\"><a href=\"#实现Watcher\" class=\"headerlink\" title=\"实现Watcher\"></a>实现Watcher</h3><blockquote>\n<p>每次数据发生变化 都会触发Watcher去更新视图</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 实现Watcher监听</span></span><br><span class=\"line\"><span class=\"comment\"> * </span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;String&#125; name 指令名称</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;Element&#125; el 指令对应的dom元素</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;Instance&#125; vm 指令所属的myVue实例</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;any&#125; exp 指令对应的值</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;any&#125; attr 绑定的属性值</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Watcher</span>(<span class=\"params\">name, el, vm, exp, attr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.el = el;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.vm = vm;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.exp = exp;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.attr = attr;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.update();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Watcher.prototype.update = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.el[<span class=\"keyword\">this</span>.attr] = <span class=\"keyword\">this</span>.vm.$data[<span class=\"keyword\">this</span>.exp]; <span class=\"comment\">// 当data对应的值(exp)改变时，修改当前元素的属性，以保证dom更新</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"调用MyVue\"><a href=\"#调用MyVue\" class=\"headerlink\" title=\"调用MyVue\"></a>调用MyVue</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 调用 MyVue</span></span><br><span class=\"line\"><span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> app = <span class=\"keyword\">new</span> MyVue(&#123;</span><br><span class=\"line\">    el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">      number: <span class=\"number\">0</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\">      increment: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.number++;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      decrease: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.number--;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"最终效果\"><a href=\"#最终效果\" class=\"headerlink\" title=\"最终效果\"></a>最终效果</h3><p><img src=\"https://yechuanjie-image.oss-cn-beijing.aliyuncs.com/18-7-24/47264916.jpg\" alt=\"最终效果\"></p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ol>\n<li>vue数据双向绑定是通过数据劫持结合发布者-订阅者模式的方式来实现的。</li>\n<li>Vue2.x版本双向数据绑定的核心是<strong>Object.defineProperty</strong>方法，劫持对象的访问器，在属性值发生变化时我们可以获取变化,从而进行进一步操作。</li>\n<li>通过监听器和解析器的协作，触发Watcher更新视图</li>\n</ol>\n<blockquote>\n<p>在即将到来的Vue3.x中，将会使用ES6的<a href=\"http://es6.ruanyifeng.com/#docs/proxy\" target=\"_blank\" rel=\"noopener\">Proxy</a>代替，它可以直接劫持整个对象，并返回一个新对象，不管是操作便利程度还是底层功能上都远强于Object.defineProperty。</p>\n</blockquote>"}],"PostAsset":[],"PostCategory":[{"post_id":"ck92alkmo0000aubv8bm3d52u","category_id":"ck92alkmt0004aubvrbxx5p7j","_id":"ck92alkn4000gaubvr4ghi1m6"},{"post_id":"ck92alkmr0002aubvot4trso4","category_id":"ck92alkmt0004aubvrbxx5p7j","_id":"ck92alkn5000jaubvu707ca8e"},{"post_id":"ck92alkmv0006aubv284wh3cd","category_id":"ck92alkn4000faubvtq4d0n1u","_id":"ck92alkn6000naubv8jwjlke1"},{"post_id":"ck92alkmx0008aubvon2y3oyp","category_id":"ck92alkn5000laubvwp6n8edr","_id":"ck92alkn7000uaubvr9unyk0d"},{"post_id":"ck92alkmz000aaubv80qt7o80","category_id":"ck92alkn4000faubvtq4d0n1u","_id":"ck92alkn7000vaubvn39lmy19"},{"post_id":"ck92alkn3000eaubv4jq8acyb","category_id":"ck92alkn7000taubv02cz35cw","_id":"ck92alkn8000zaubvrvsmchde"}],"PostTag":[{"post_id":"ck92alkmo0000aubv8bm3d52u","tag_id":"ck92alkmv0005aubvnqig4yak","_id":"ck92alkn5000iaubv4c79veji"},{"post_id":"ck92alkmo0000aubv8bm3d52u","tag_id":"ck92alkn0000caubvzxkbgh7n","_id":"ck92alkn5000kaubvj5n848og"},{"post_id":"ck92alkmr0002aubvot4trso4","tag_id":"ck92alkmv0005aubvnqig4yak","_id":"ck92alkn7000qaubv3vzhmd9n"},{"post_id":"ck92alkmr0002aubvot4trso4","tag_id":"ck92alkn0000caubvzxkbgh7n","_id":"ck92alkn7000raubvky0699s5"},{"post_id":"ck92alkmv0006aubv284wh3cd","tag_id":"ck92alkmv0005aubvnqig4yak","_id":"ck92alkn8000xaubvikl06jac"},{"post_id":"ck92alkmv0006aubv284wh3cd","tag_id":"ck92alkn7000saubvh6qq521b","_id":"ck92alkn8000yaubv7qjxgdv5"},{"post_id":"ck92alkmx0008aubvon2y3oyp","tag_id":"ck92alkn7000waubv4tg5rpnn","_id":"ck92alkn80012aubvqwntsu4v"},{"post_id":"ck92alkmx0008aubvon2y3oyp","tag_id":"ck92alkn80010aubv0qfn90vv","_id":"ck92alkn80013aubvej6zl9sm"},{"post_id":"ck92alkmz000aaubv80qt7o80","tag_id":"ck92alkmv0005aubvnqig4yak","_id":"ck92alkn90015aubv7vfo150k"},{"post_id":"ck92alkmz000aaubv80qt7o80","tag_id":"ck92alkn0000caubvzxkbgh7n","_id":"ck92alkn90016aubv21p1uryo"},{"post_id":"ck92alkn3000eaubv4jq8acyb","tag_id":"ck92alkmv0005aubvnqig4yak","_id":"ck92alkn90017aubvs4mrp027"},{"post_id":"ck92alkn3000eaubv4jq8acyb","tag_id":"ck92alkn90014aubv64tum4t3","_id":"ck92alkn90018aubvglxkummy"}],"Tag":[{"name":"JavaScript","_id":"ck92alkmv0005aubvnqig4yak"},{"name":"ES6","_id":"ck92alkn0000caubvzxkbgh7n"},{"name":"动画","_id":"ck92alkn7000saubvh6qq521b"},{"name":"Taro","_id":"ck92alkn7000waubv4tg5rpnn"},{"name":"React","_id":"ck92alkn80010aubv0qfn90vv"},{"name":"Vue","_id":"ck92alkn90014aubv64tum4t3"}]}}